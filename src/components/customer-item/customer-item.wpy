<template>
  <div class="item">
    <div class="item-row row">
      <div class="item-col col-3">
        <div class="item-img">
          <lazy-image src="{{url}}" width="50%" mode="aspectFill"/>
        </div>
      </div>
      <div class="item-col col-3">
        <div class="item-btn item-mobile" @tap.stop="onHandleMobile">
          <div class="item-icon iconfont icon-mobile"></div>
          <div class="item-label">电话</div>
        </div>
      </div>
      <div class="item-col col-3">
        <div class="item-btn item-browse" @tap.stop="onHandleBrowse">
          <div class="item-icon iconfont icon-browse"></div>
          <div class="item-label">浏览</div>
          <div class="item-value">{{item.record}}</div>
        </div>
      </div>
      <div class="item-col col-3">
        <div class="item-btn item-follow" @tap.stop="onHandleFollow">
          <div class="item-icon iconfont icon-follow"></div>
          <div class="item-label">收藏</div>
          <div class="item-value">{{item.follow}}</div>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import Route from '../../mixins/route';
  import * as $routes from '../../router';
  import * as $config from '../../config';

  wepy.component({
    mixins: [Route],
    data: {
      url: $config.DEFAULT_PHOTO
    },
    props: {
      item: {
        type: Object,
        default: {}
      }
    },
    watch: {},
    methods: {
      onHandleMobile() {
        const {phone} = this.item;
        wx.makePhoneCall({
          phoneNumber: phone,
          success: (res) => {
            console.log(res);
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleFollow() {
        const query = '?item=' + JSON.stringify(this.item);
        this.navigateTo($routes.CUSTOMER.FOLLOW.path + query);
      },
      onHandleBrowse() {
        const query = '?item=' + JSON.stringify(this.item);
        this.navigateTo($routes.CUSTOMER.BROWSE.path + query);
      }
    },
    created() {
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/common";
  @import "../../assets/less/variable";

  .item {
    overflow: hidden;
    position: relative;
    will-change: transform;
    background-color: @white;
    .item-row {
      padding: unit(30, rpx);
      text-align: center;
      color: @fontColor1;
      .item-col {
        .item-img {
          overflow: hidden;
          display: inline-block;
          width: unit(120, rpx);
          height: unit(120, rpx);
          margin-top: unit(20, rpx);
          border-radius: @borderRadius100;
        }
        .item-btn {
          position: relative;
          padding: unit(30, rpx) 0;
          .item-icon {
            height: unit(50, rpx);
            line-height: unit(50, rpx);
            font-size: @fontSize46;
          }
          .item-value {
            position: absolute;
            top: unit(15, rpx);
            right: unit(30, rpx);
            height: unit(40, rpx);
            line-height: unit(40, rpx);
            min-width: unit(40, rpx);
            padding: 0 unit(10, rpx);
            background-color: @btnDelete;
            border-radius: @borderRadius40;
            font-size: @fontSize24;
            text-align: center;
            color: @white;
          }
          .item-label {
            height: unit(50, rpx);
            line-height: unit(50, rpx);
            font-size: @fontSize26;
          }
          &.item-browse {
            .item-icon {
              color: @btnBrowse;
            }
          }
          &.item-follow {
            .item-icon {
              color: @btnFollow;
            }
          }
          &.item-mobile {
            .item-icon {
              color: @btnMobile;
            }
          }
        }
      }
    }
  }
</style>

<config>
  {
  usingComponents: {
  'lazy-image': '../lazy-image/lazy-image'
  }
  }
</config>
