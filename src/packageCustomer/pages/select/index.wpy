<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="用户管理"/>
      </div>
      <div class="body">
        <error :isFailure="isFailure&&!isCustomer.rows.length" @refresh="onRefresh"/>
        <empty :isSuccess="isSuccess&&!isCustomer.rows.length"/>
        <div class="context fade" v-if="isCustomer.rows.length">
          <scroll-view class="scroll-view" scroll-y="{{isScroll}}"
                       @scrolltolower="onHandleScrollToLower">
            <div class="item-row row">
              <div class="item-col col-12" v-for="(item,index) in isCustomer.rows">
                <customer-item :item="item" :key="index"/>
              </div>
            </div>
            <loading-more :length="isCustomer.rows.length" :totalCount="isCustomer.totalCount"/>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store';
  import Toast from '../../../mixins/toast';
  import Loading from '../../../mixins/loading';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      timer: null,
      pageSize: 10,
      pageIndex: 1,
      isScroll: true
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleScrollToLower() {
        if (this.timer) return;
        this.timer = setTimeout(() => {
          const {rows, totalCount} = this.isCustomer;
          if (rows.length < totalCount) {
            this.exeAjaxSelectCustomer();
          }
        }, 0);
      },
      exeAjaxSelectCustomer() {
        this.showLoading();
        const {isCustomer} = this;
        const {rows} = isCustomer || {};
        const params = this.getParams();
        this.ajaxSelectCustomer(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.pageIndex++;
            } else {
              if ((rows || []).length) {
                this.showToast('加载失败，请重试');
              }
            }
            this.timer = null;
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            if ((rows || []).length) {
              this.showToast('加载失败，请重试');
            }
            this.timer = null;
            console.log(err);
          });
      },
      onRefresh() {
        this.exeAjaxSelectCustomer();
      },
      getParams() {
        const {isLogin, pageIndex, pageSize} = this;
        const {busId} = isLogin;
        const params = {
          busId,
          pageIndex,
          pageSize
        };
        return params;
      }
    },

    onLoad() {
      this.removeCustomerReplace();
      this.exeAjaxSelectCustomer();
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/@media";
  @import "../../../assets/less/variable";

  @height: unit(120, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .item-row {
              padding: unit(15, rpx);
              .item-col {
                padding: unit(15, rpx);
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'error':'../../../components/error/error',
  'empty':'../../../components/empty/empty',
  'top-bar': '../../../components/top-bar/top-bar',
  'lazy-image': '../../../components/lazy-image/lazy-image',
  'loading-more': '../../../components/loading-more/loading-more',
  'customer-item': '../../../components/customer-item/customer-item'
  }
  }
</config>
