<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="房源配置"></top-bar>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="scroll-header"></div>
              <div class="scroll-body">
                <div class="module">
                  <div class="module-content">
                    <div class="module-header">
                      <div class="module-title">推荐经纪人</div>
                    </div>
                    <div class="module-body">
                      <div class="module-agents">
                        <div class="module-row row">
                          <div class="module-col col-12"
                               v-for="(item,index) in agents.items"
                               :key="index" @tap="onHandleAgentSelector(index)">
                            <div class="item-agent flex" :class="{'checked':item.checked}">
                              <div class="item-img">
                                <lazy-image :src="item.url" loadStyle="border-radius:100%;"></lazy-image>
                              </div>
                              <div class="item-info">
                                <div class="item-name">{{item.name}}</div>
                                <div class="item-phone">{{item.phone}}</div>
                              </div>
                              <div class="item-check iconfont icon-right"></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer"></div>
                  </div>
                </div>
                <div class="module">
                  <div class="module-content">
                    <div class="module-header">
                      <div class="module-title">房源特色</div>
                    </div>
                    <div class="module-body">
                      <div class="module-tags">
                        <div class="module-row row">
                          <div class="module-col col-3"
                               v-for="(item,index) in tags.items"
                               :key="index" @tap="onHandleTagSelector(index)">
                            <div class="item-tag" :class="{'checked':item.checked}">{{item.label}}</div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer">
                      <div class="information">建议：为保证前台用户体验请尽量选择3个房源特色</div>
                    </div>
                  </div>
                </div>
                <div class="module">
                  <div class="module-content">
                    <div class="module-header">
                      <div class="module-title">房源配置</div>
                    </div>
                    <div class="module-body">
                      <div class="module-configs">
                        <div class="module-row row">
                          <div class="module-col col-3"
                               v-for="(item,index) in fagnwupeizhi.items"
                               :key="index" @tap="onHandleConfigSelector(index)">
                            <div class="item-config" :class="{'checked':item.checked}">
                              <div class="item-check iconfont icon-right"></div>
                              <div class="item-icon iconfont {{item.icon}}"></div>
                              <div class="item-label">{{item.label}}</div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer"></div>
                  </div>
                </div>
              </div>
              <div class="scroll-footer"></div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert{{(isAgentsEmpty&&isTagsEmpty)?'':' disable'}}"
             @tap="onHandleClickNext">下一步
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../../store/index';
  import * as $routes from '../../../../router/index';
  import Toast from '../../../../mixins/toast';
  import Loading from '../../../../mixins/loading';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      paramsStep1: {},
      isAgentsEmpty: false,
      isTagsEmpty: false,
      agents: {
        value: '',
        items: [
          {
            id: 1001,
            url: '../../assets/images/agent.jpg',
            name: '彭伦健',
            phone: '18130278679',
            checked: false
          },
          {
            id: 1002,
            url: '../../assets/images/agent.jpg',
            name: '彭伦健',
            phone: '18130278679',
            checked: false
          },
          {
            id: 1003,
            url: '../../assets/images/agent.jpg',
            name: '彭伦健',
            phone: '18130278679',
            checked: false
          }
        ]
      },
      tags: {
        value: '',
        items: [
          {
            label: '南北通透',
            checked: false
          },
          {
            label: '精装修',
            checked: false
          },
          {
            label: '豪华装修',
            checked: false
          },
          {
            label: '拎包入住',
            checked: false
          },
          {
            label: '随时看房',
            checked: false
          },
          {
            label: '近地铁',
            checked: false
          },
          {
            label: '集中供暖',
            checked: false
          },
          {
            label: '有电梯',
            checked: false
          },
          {
            label: '车位充足',
            checked: false
          },
          {
            label: '免物业费',
            checked: false
          }
        ]
      },
      fagnwupeizhi: {
        value: '',
        items: [
          {
            icon: 'icon-item01',
            label: '卫生间',
            checked: false
          },
          {
            icon: 'icon-item02',
            label: '洗衣机',
            checked: false
          },
          {
            icon: 'icon-item03',
            label: '可做饭',
            checked: false
          },
          {
            icon: 'icon-item04',
            label: '热水器',
            checked: false
          },
          {
            icon: 'icon-item05',
            label: '阳台',
            checked: false
          },
          {
            icon: 'icon-item06',
            label: '冰箱',
            checked: false
          },
          {
            icon: 'icon-item07',
            label: '电梯',
            checked: false
          },
          {
            icon: 'icon-item08',
            label: '沙发',
            checked: false
          },
          {
            icon: 'icon-item09',
            label: '宽带',
            checked: false
          },
          {
            icon: 'icon-item10',
            label: '衣柜',
            checked: false
          },
          {
            icon: 'icon-item11',
            label: '暖气',
            checked: false
          },
          {
            icon: 'icon-item12',
            label: '床',
            checked: false
          },
          {
            icon: 'icon-item13',
            label: '空调',
            checked: false
          },
          {
            icon: 'icon-item14',
            label: '电视',
            checked: false
          }
        ]
      }
    },

    computed: {},

    methods: {
      onHandleCheckEmpty() {
        this.isAgentsEmpty = this.agents.value;
        this.isTagsEmpty = this.tags.value;
      },
      onHandleClickNext() {
        if (!this.isAgentsEmpty) {
          this.showToast('请至少推荐一个经纪人');
        } else if (!this.isTagsEmpty) {
          this.showToast('请选择房源特色');
        } else {
          const params = this.getParams();
          const paramsStep2 = Object.assign(this.paramsStep1, params);
          const query = '?paramsStep2=' + JSON.stringify(paramsStep2);
          wx.navigateTo({
            url: $routes.INSERT_HOUSE.rent.step3.path + query
          });
        }
      },
      onHandleAgentSelector(index) {
        let arr = [];
        if (this.agents.items[index].checked) {
          this.agents.items[index].checked = false;
        } else {
          this.agents.items[index].checked = true;
        }

        this.agents.items.map((item) => {
          if (item.checked) {
            arr.push(item.id);
          }
        });

        this.agents.value = arr.join(' ');
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleTagSelector(index) {
        let arr = [];
        if (this.tags.items[index].checked) {
          this.tags.items[index].checked = false;
        } else {
          this.tags.items[index].checked = true;
        }

        this.tags.items.map((item) => {
          if (item.checked) {
            arr.push(item.label);
          }
        });

        this.tags.value = arr.join(' ');
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleConfigSelector(index) {
        let arr = [];
        if (this.fagnwupeizhi.items[index].checked) {
          this.fagnwupeizhi.items[index].checked = false;
        } else {
          this.fagnwupeizhi.items[index].checked = true;
        }

        this.fagnwupeizhi.items.map((item) => {
          if (item.checked) {
            arr.push(item.label);
          }
        });

        this.fagnwupeizhi.value = arr.join(' ');
        arr = null;
      },
      getParams() {
        const params = {
          tags: this.tags.value,
          agents: this.agents.value,
          fagnwupeizhi: this.fagnwupeizhi.value
        };
        return params;
      }
    },

    onLoad(option) {
      const {paramsStep1} = option;
      this.paramsStep1 = JSON.parse(paramsStep1);
    }
  });
</script>

<style scoped lang="less">
  @import "../../../../assets/less/variable";
  @import "../../../../assets/less/@media";

  @height: unit(110, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: unit(130, rpx);
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .scroll-header {
              }
              .scroll-body {
                .module {
                  .module-content {
                    .module-header {
                      padding: unit(30, rpx) unit(30, rpx) 0;
                      .module-title {
                        height: unit(32, rpx);
                        line-height: unit(32, rpx);
                        padding-left: unit(20, rpx);
                        border-left: 4px solid @theme2;
                        font-size: @fontSize32;
                        letter-spacing: 0.5px;
                        font-weight: bold;
                        color: @fontColor1;
                      }
                    }
                    .module-body {
                      .module-agents {
                        .module-row {
                          padding: unit(15, rpx);
                          .module-col {
                            padding: unit(20, rpx) unit(15, rpx);
                            .item-agent {
                              position: relative;
                              .item-img {
                                overflow: hidden;
                                width: unit(80, rpx);
                                height: unit(80, rpx);
                                border-radius: @borderRadius100;
                              }
                              .item-info {
                                padding: 0 unit(30, rpx);
                                font-size: @fontSize28;
                                color: @fontColor3;
                                .item-name {
                                  height: unit(40, rpx);
                                  line-height: unit(40, rpx);
                                }
                                .item-phone {
                                  height: unit(40, rpx);
                                  line-height: unit(40, rpx);
                                }
                              }
                              .item-check {
                                position: absolute;
                                top: 50%;
                                z-index: 1;
                                right: unit(10, rpx);
                                width: unit(44, rpx);
                                height: unit(44, rpx);
                                line-height: unit(44, rpx);
                                margin-top: unit(-22, rpx);
                                transition: all 150ms ease;
                                border-radius: @borderRadius100;
                                background-color: @unCheck;
                                font-size: @fontSize20;
                                color: @borderColor1;
                                text-align: center;
                              }
                              &.checked {
                                .item-check {
                                  background: -webkit-linear-gradient(left, @theme1, @theme2);
                                  color: @white;
                                }
                              }
                            }
                          }
                        }
                      }
                      .module-tags {
                        .module-row {
                          padding: unit(15, rpx);
                          .module-col {
                            padding: unit(20, rpx) unit(15, rpx);
                            text-align: center;
                            .item-tag {
                              height: unit(60, rpx);
                              line-height: unit(60, rpx);
                              border-radius: unit(60, rpx);
                              background: @unCheck;
                              font-size: @fontSize24;
                              color: @fontColor3;
                              &.checked {
                                background: -webkit-linear-gradient(left, @theme1, @theme2);
                                color: @white;
                              }
                            }
                          }
                        }
                      }
                      .module-configs {
                        text-align: center;
                        color: @fontColor1;
                        .module-row {
                          padding: unit(15, rpx);
                          .module-col {
                            padding: unit(15, rpx);
                            .item-config {
                              position: relative;
                              .item-icon {
                                font-size: @fontSize60;
                              }
                              .item-label {
                                height: unit(40, rpx);
                                line-height: unit(40, rpx);
                                font-size: @fontSize24;
                              }
                              .item-check {
                                position: absolute;
                                left: 0;
                                bottom: 0;
                                z-index: 1;
                                width: unit(44, rpx);
                                height: unit(44, rpx);
                                line-height: unit(44, rpx);
                                transition: all 150ms ease;
                                border-radius: @borderRadius100;
                                background-color: @unCheck;
                                font-size: @fontSize20;
                                color: @borderColor1;
                              }
                              &.checked {
                                .item-check {
                                  background: -webkit-linear-gradient(left, @theme1, @theme2);
                                  color: @white;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    .module-footer {
                      .information {
                        padding: 0 unit(30, rpx) unit(30, rpx);
                        line-height: unit(40, rpx);
                        font-size: @fontSize26;
                        color: @fontColor3;
                      }
                    }
                  }
                  &:first-child {
                    margin: 0;
                  }
                }
              }
              .scroll-footer {
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }

</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../../components/top-bar/top-bar',
  'lazy-image': '../../../../components/lazy-image/lazy-image'
  }
  }
</config>
