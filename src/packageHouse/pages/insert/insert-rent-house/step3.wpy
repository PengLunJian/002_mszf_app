<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="图片上传"></top-bar>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="scroll-header"></div>
              <div class="scroll-body">
                <div class="module">
                  <div class="module-content">
                    <div class="module-header">
                      <div class="module-title">图片上传</div>
                    </div>
                    <div class="module-body">
                      <div class="module-images">
                        <div class="module-row row">
                          <div class="module-col col-4" v-for="(item,index) in items" :key="index">
                            <div class="module-item" @tap="onHandleShowImage(index)">
                              <div class="btn-delete iconfont icon-delete1"
                                   @tap.stop="onHandleDeleteImage(index)"></div>
                              <img class="item-image" src="{{item}}"/>
                            </div>
                          </div>
                          <div class="module-col col-4">
                            <div class="module-btn btn btn-image" @tap="onHandleUploadImage">
                              <div class="module-icon iconfont icon-insert"></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer"></div>
                  </div>
                </div>
              </div>
              <div class="scroll-footer"></div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert" @tap="onHandleSubmitHouse">提交房源</div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import apis from '../../../../apis/index';
  import store from '../../../../store/index';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../../../router/index';
  import * as localStorage from '../../../../utils/localStorage';
  import Toast from '../../../../mixins/toast';
  import Loading from '../../../../mixins/loading';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      items: [],
      pic_url: [],
      paramsStep2: {},
      image: {
        count: 0,
        baseUrl: ''
      }
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      exeAjaxInsertHouse() {
        const params = this.getParams();
        const paramsStep3 = Object.assign(this.paramsStep2, params);
        this.ajaxInsertHouse(paramsStep3)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.showToast('房源新增成功');
              setTimeout(() => {
                wx.navigateBack({
                  delta: 3
                });
              }, 1000);
            } else {
              this.showToast('新增失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('新增失败，请重试');
            console.log(err);
          });
      },
      exeAjaxUploadImage() {
        let {count, baseUrl} = this.image;
        const filePath = this.items[count];
        const params = {count, filePath};
        this.ajaxUploadImage(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              this.pic_url.push(baseUrl + data);
            }
            this.image.count++;
            if (this.image.count === this.items.length) {
              this.exeAjaxInsertHouse();
            } else {
              this.exeAjaxUploadImage();
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('第' + count + '张图片上传失败');
            this.image.count++;
            if (this.image.count === this.items.length) {
              this.exeAjaxInsertHouse();
            } else {
              this.exeAjaxUploadImage();
            }
            console.log(err);
          });
      },
      onHandleSubmitHouse() {
        this.showLoading('正在加载');
        if (this.items.length) {
          this.exeAjaxUploadImage();
        } else {
          this.exeAjaxInsertHouse();
        }
      },
      onHandleUploadImage() {
        wx.navigateTo({
          url: $routes.UPLOAD.path
        });
      },
      onHandleShowImage(index) {
        wx.previewImage({
          current: this.items[index],
          urls: this.items
        });
      },
      onHandleDeleteImage(index) {
        this.items.splice(index, 1);
      },
      getParams() {
        const params = {
          pic_url: this.pic_url
        };
        return params;
      }
    },

    onShow() {
      const path = localStorage.getItem('path');
      if (path) {
        this.items.push(path);
        localStorage.removeItem('path');
      }
    },

    onLoad(option) {
      const {paramsStep2} = option;
      const end = apis.baseUrl.lastIndexOf('/');
      this.paramsStep2 = JSON.parse(paramsStep2);
      this.image.baseUrl = apis.baseUrl.substring(0, end);
    }
  });
</script>

<style scoped lang="less">
  @import "../../../../assets/less/variable";
  @import "../../../../assets/less/@media";

  @height: unit(110, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: unit(130, rpx);
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .scroll-header {
              }
              .scroll-body {
                .module {
                  .module-content {
                    .module-header {
                      padding: unit(30, rpx) unit(30, rpx) 0;
                      .module-title {
                        height: unit(32, rpx);
                        line-height: unit(32, rpx);
                        padding-left: unit(20, rpx);
                        border-left: 4px solid @theme2;
                        font-size: @fontSize32;
                        letter-spacing: 0.5px;
                        font-weight: bold;
                        color: @fontColor1;
                      }
                    }
                    .module-body {
                      .module-images {
                        .module-row {
                          padding: unit(15, rpx);
                          .module-col {
                            padding: unit(15, rpx);
                            .module-item {
                              width: 100%;
                              position: relative;
                              .item-image {
                                width: 100%;
                                height: unit(200, rpx);
                              }
                              .btn-delete {
                                position: absolute;
                                top: 0;
                                right: 0;
                                z-index: 1;
                                width: unit(50, rpx);
                                height: unit(50, rpx);
                                line-height: unit(50, rpx);
                                background-color: rgba(0, 0, 0, .6);
                                font-size: @fontSize36;
                                text-align: center;
                                color: @btnDelete;
                              }
                            }
                            .module-btn {
                              height: unit(200, rpx);
                              line-height: unit(200, rpx);
                              background-color: #F0F0F0;
                              text-align: center;
                              .module-icon {
                                font-size: @fontSize50;
                                color: @fontColor5;
                              }
                            }
                          }
                        }
                      }
                    }
                    .module-footer {}
                  }
                  &:first-child {
                    margin: 0;
                  }
                }
              }
              .scroll-footer {
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }

</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../../components/top-bar/top-bar'
  }
  }
</config>
