<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="主力户型"/>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="module">
                <div class="module-content">
                  <div class="module-body">
                    <div class="module-base">
                      <div class="form-row row">
                        <div class="form-col col-12">
                          <div class="form-group">
                            <label class="form-label">状态</label>
                            <input class="form-input" v-model="state.value"
                                   disabled="{{true}}" type="text" placeholder="在售"
                                   @tap="onHandleSelectState"/>
                            <span class="form-next iconfont icon-next"></span>
                          </div>
                        </div>
                        <div class="form-col col-12">
                          <div class="form-group">
                            <label class="form-label">面积</label>
                            <input class="form-input" v-model="mainArea" type="digit"
                                   placeholder="m²"
                                   @input="onHandleCheckEmpty"/>
                            <span class="form-next iconfont icon-next"></span>
                          </div>
                        </div>
                        <div class="form-col col-12">
                          <picker mode="multiSelector" @change="onHandleSelectApart"
                                  value="{{apart.index}}" range="{{apart.items}}">
                            <div class="form-group">
                              <label class="form-label">户型</label>
                              <input class="form-input" v-model="apart.value"
                                     disabled="{{true}}" type="text"
                                     placeholder="2室1厅1卫"/>
                              <span class="form-next iconfont icon-next"></span>
                            </div>
                          </picker>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="module-footer"></div>
                </div>
              </div>
              <div class="module">
                <div class="module-content">
                  <div class="module-header">
                    <div class="module-title">图片上传</div>
                  </div>
                  <div class="module-body">
                    <div class="module-images">
                      <div class="module-row row">
                        <div class="module-col col-4" v-for="(item,index) in urls" :key="index">
                          <div class="module-item" @tap="onHandleShowImage(index)">
                            <div class="btn-delete iconfont icon-delete"
                                 @tap.stop="onHandleDeleteImage(index)"></div>
                            <lazy-image src="{{fileUrl+item}}" mode="aspectFill"/>
                          </div>
                        </div>
                        <div class="module-col col-4">
                          <div class="module-btn btn btn-image" @tap="onHandleShowUpload">
                            <div class="module-icon iconfont icon-insert"></div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="module-footer"></div>
                </div>
              </div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert{{isDisable?'':' disable'}}"
             @tap="onHandleSaveLayout">保存
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import apis from '../../../apis';
  import store from '../../../store';
  import Toast from '../../../mixins/toast';
  import Route from '../../../mixins/route';
  import Loading from '../../../mixins/loading';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../../router';

  wepy.page({
    store,

    mixins: [Toast, Route, Loading],

    data: {
      noData: '暂无数据',
      fileUrl: apis.fileUrl,
      isDisable: false,
      mainArea: '',
      state: {
        value: '',
        items: ['在售', '待售', '售罄']
      },
      apart: {
        value: '',
        items: [
          ['1室', '2室', '3室', '4室', '5室', '6室', '7室', '8室', '9室', '10室', '11室', '12室'],
          ['0厅', '1厅', '2厅', '3厅', '4厅', '5厅', '6厅', '7厅', '8厅', '9厅', '10厅', '11厅', '12厅'],
          ['0卫', '1卫', '2卫', '3卫', '4卫', '5卫', '6卫', '7卫', '8卫', '9卫', '10卫', '11卫', '12卫']
        ],
        index: [1, 1, 1]
      },
      urls: [],
      index: -1,
      type: '新增'
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleCheckEmpty() {
        let isBaseEmpty =
          (
            this.mainArea &&
            this.apart.value &&
            this.state.value
          );
        let isUrlsEmpty = this.urls.length;
        this.isDisable = isBaseEmpty && isUrlsEmpty;
        return {
          isBaseEmpty,
          isUrlsEmpty
        };
      },
      onHandleSelectState() {
        wx.showActionSheet({
          itemList: this.state.items,
          success: (res) => {
            const index = res.tapIndex;
            this.state.value = this.state.items[index];
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleSelectApart(e) {
        const index = e.$wx.detail.value;
        const items = this.apart.items;
        this.apart.value = items[0][index[0]] + items[1][index[1]] + items[2][index[2]];
        this.onHandleCheckEmpty();
      },
      onHandleShowUpload() {
        this.navigateTo($routes.HOUSE.UPLOAD.path);
      },
      onHandleShowImage(index) {
        const urls = this.urls.map((item) => {
          return this.fileUrl + item;
        });
        wx.previewImage({
          current: urls[index],
          urls: urls
        });
      },
      onHandleDeleteImage(index) {
        this.urls.splice(index, 1);
        this.onHandleCheckEmpty();
      },
      onHandleSaveLayout() {
        const isCheckEmpty = this.onHandleCheckEmpty();
        const {isBaseEmpty, isUrlsEmpty} = isCheckEmpty;
        if (!isBaseEmpty) {
          this.showToast('基本信息填写不完整');
        } else if (!isUrlsEmpty) {
          this.showToast('请上传该房源户型图');
        } else {
          this.onHandleUpdateLayout();
        }
      },
      onHandleUpdateLayout() {
        const {index, type} = this;
        const data = this.getParams();
        if (type === '修改') {
          const params = {data, index};
          this.updateLayoutReplace(params);
        } else {
          this.insertLayoutReplace(data);
        }
        this.navigateBack(1);
      },
      onHandleRenderLayout(data) {
        const {mainArea, picUrl, state, apart} = data;
        this.urls = picUrl ? [picUrl] : [];
        this.mainArea = mainArea;
        this.state.value = state;
        this.apart.value = apart;
        this.onHandleCheckEmpty();
      },
      getParams() {
        const {mainArea, state, apart, urls} = this;
        const picUrl = urls.length ? urls[0] : '';
        const params = {
          picUrl,
          mainArea,
          state: state.value,
          apart: apart.value
        };
        return params;
      }
    },

    onShow() {
      const {isImage} = this;
      if (isImage) {
        this.urls = [isImage];
        this.removeImageReplace();
      }
      this.onHandleCheckEmpty();
    },

    onLoad(option) {
      const {type, index} = option;
      if (type === '修改') {
        this.index = index;
        this.type = '修改';
        const {isLayout} = this;
        const data = isLayout[index];
        this.onHandleRenderLayout(data);
      }
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/@media";

  @height: unit(120, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .module {
                .module-content {
                  .module-header {
                    padding: unit(30, rpx) unit(30, rpx) 0;
                    .module-title {
                      height: unit(32, rpx);
                      line-height: unit(32, rpx);
                      padding-left: unit(20, rpx);
                      border-left: 4px solid @theme2;
                      font-size: @fontSize32;
                      letter-spacing: 0.5px;
                      font-weight: bold;
                      color: @fontColor1;
                    }
                  }
                  .module-body {
                    .module-base {
                      padding-left: unit(30, rpx);
                      .form-row {
                        .form-col {
                          padding-right: unit(20, rpx);
                          border-bottom: 0.5px solid @borderColor1;
                          .form-group {
                            display: flex;
                            font-size: @fontSize32;
                            color: @fontColor1;
                            .form-label {
                              width: 25%;
                              height: @height;
                              display: inline-block;
                              vertical-align: middle;
                              line-height: @height;
                            }
                            .form-input {
                              width: 75%;
                              height: @height;
                              display: inline-block;
                              vertical-align: middle;
                              text-align: right;
                            }
                            .form-next {
                              display: inline-block;
                              vertical-align: middle;
                              padding-left: unit(10, rpx);
                              line-height: @height;
                              color: @iconNext;
                            }
                          }
                          &:last-child {
                            border: none;
                          }
                        }
                      }
                    }
                    .module-images {
                      .module-row {
                        padding: unit(15, rpx);
                        .module-col {
                          padding: unit(15, rpx);
                          .module-item {
                            width: 100%;
                            position: relative;
                            height: unit(200, rpx);
                            .btn-delete {
                              position: absolute;
                              top: 0;
                              right: 0;
                              z-index: 10;
                              width: unit(50, rpx);
                              height: unit(50, rpx);
                              line-height: unit(50, rpx);
                              background-color: rgba(0, 0, 0, .6);
                              font-size: @fontSize36;
                              text-align: center;
                              color: @btnDelete;
                            }
                          }
                          .module-btn {
                            height: unit(200, rpx);
                            line-height: unit(200, rpx);
                            background-color: #F0F0F0;
                            text-align: center;
                            .module-icon {
                              font-size: @fontSize50;
                              color: @fontColor5;
                            }
                          }
                        }
                      }
                    }
                  }
                  .module-footer {
                  }
                }
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }


</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'lazy-image': '../../../components/lazy-image/lazy-image'
  }
  }
</config>
