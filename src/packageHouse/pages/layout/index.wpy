<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="主力户型"></top-bar>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="scroll-header"></div>
              <div class="scroll-body">
                <div class="module">
                  <div class="module-content">
                    <div class="module-body">
                      <div class="module-base">
                        <div class="form-row row">
                          <div class="form-col col-12">
                            <div class="form-group">
                              <label class="form-label">状态</label>
                              <input class="form-input" v-model="status.value"
                                     disabled="{{true}}" type="text" placeholder="在售"
                                     @tap="onHandleShowStatus"/>
                              <span class="form-next iconfont icon-next"></span>
                            </div>
                          </div>
                          <div class="form-col col-12">
                            <div class="form-group">
                              <label class="form-label">面积</label>
                              <input class="form-input" v-model="mianji" type="digit"
                                     placeholder="m²"
                                     @input="onHandleCheckEmpty"/>
                              <span class="form-next iconfont icon-next"></span>
                            </div>
                          </div>
                          <div class="form-col col-12">
                            <picker mode="multiSelector" @change="onHandleShowHuXing"
                                    value="{{huxing.index}}" range="{{huxing.items}}">
                              <div class="form-group">
                                <label class="form-label">户型</label>
                                <input class="form-input" v-model="huxing.value"
                                       disabled="{{true}}" type="text"
                                       placeholder="2室1厅1卫"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </picker>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer"></div>
                  </div>
                </div>
                <div class="module">
                  <div class="module-content">
                    <div class="module-header">
                      <div class="module-title">图片上传</div>
                    </div>
                    <div class="module-body">
                      <div class="module-images">
                        <div class="module-row row">
                          <div class="module-col col-4" v-for="(item,index) in totalUrls" :key="index">
                            <div class="module-item" @tap="onHandleShowImage(index)">
                              <div class="btn-delete iconfont icon-delete"
                                   @tap.stop="onHandleDeleteImage(index)"></div>
                              <lazy-image src="{{item}}" mode="aspectFill"/>
                            </div>
                          </div>
                          <div class="module-col col-4">
                            <div class="module-btn btn btn-image" @tap="onHandleShowUpload">
                              <div class="module-icon iconfont icon-insert"></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="module-footer"></div>
                  </div>
                </div>
              </div>
              <div class="scroll-footer"></div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert{{isDisable?'':' disable'}}"
             @tap="onHandleSaveLayout">保存
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store/index';
  import {mapState, mapActions} from '@wepy/redux';
  import Toast from '../../../mixins/toast';
  import Loading from '../../../mixins/loading';
  import * as controller from './controller';
  import * as $routes from '../../../router';
  import apis from '../../../apis';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      noData: '暂无数据',
      baseUrl: apis.baseUrl,
      isDisable: false,
      mianji: '',
      status: {
        value: '',
        items: ['在售', '待售', '售罄']
      },
      huxing: {
        value: '',
        items: [
          ['1室', '2室', '3室', '4室', '5室', '6室', '7室', '8室', '9室', '10室', '11室', '12室'],
          ['0厅', '1厅', '2厅', '3厅', '4厅', '5厅', '6厅', '7厅', '8厅', '9厅', '10厅', '11厅', '12厅'],
          ['0卫', '1卫', '2卫', '3卫', '4卫', '5卫', '6卫', '7卫', '8卫', '9卫', '10卫', '11卫', '12卫']
        ],
        index: [1, 1, 1]
      },
      pic: '',
      oldUrls: [],
      newUrls: [],
      totalUrls: [],
      layout: null,
      index: -1,
      type: '新增'
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleCheckEmpty() {
        let isBaseEmpty =
          (
            this.mianji &&
            this.huxing.value &&
            this.status.value
          );
        this.isDisable = isBaseEmpty;
        return {
          isBaseEmpty
        };
      },
      onHandleShowStatus() {
        wx.showActionSheet({
          itemList: this.status.items,
          success: (res) => {
            const index = res.tapIndex;
            this.status.value = this.status.items[index];
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleShowHuXing(e) {
        const index = e.$wx.detail.value;
        const items = this.huxing.items;
        this.huxing.value = items[0][index[0]] + items[1][index[1]] + items[2][index[2]];
        this.onHandleCheckEmpty();
      },
      onHandleShowUpload() {
        wx.navigateTo({
          url: $routes.HOUSE.UPLOAD.path
        });
      },
      onHandleShowImage(index) {
        const {totalUrls} = this;
        wx.previewImage({
          current: totalUrls[index],
          urls: totalUrls
        });
      },
      onHandleDeleteImage() {
        this.oldUrls = [];
        this.newUrls = [];
        this.totalUrls = [];
        this.pic = '';
      },
      onHandleSaveLayout() {
        const isCheckEmpty = this.onHandleCheckEmpty();
        const {isBaseEmpty} = isCheckEmpty;
        if (!isBaseEmpty) {
          this.showToast('基本信息填写不完整');
        } else {
          if (this.newUrls.length) {
            this.exeAjaxInsertImage();
          } else {
            this.onHandleUpdateLayout();
          }
        }
      },
      onHandleUpdateLayout() {
        const {index, type} = this;
        const data = this.getParams();
        if (type === '修改') {
          const params = {data, index};
          this.updateLayoutReplace(params);
        } else {
          this.insertLayoutReplace(data);
        }
        wx.navigateBack({
          delta: 1
        });
      },
      onHandleRenderLayout(data) {
        const {mianji, pic, tags, title} = data;
        this.mianji = mianji;
        this.pic = pic;
        this.status.value = tags;
        this.huxing.value = title;
        this.oldUrls = pic ? [apis.baseUrl + pic] : [];
        this.totalUrls = this.oldUrls;
        this.layout = data;
        this.onHandleCheckEmpty();
      },
      exeAjaxInsertImage() {
        this.showLoading();
        const params = {filePath: this.newUrls[0]};
        this.ajaxInsertImage(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              this.pic = data;
              this.onHandleUpdateLayout();
            } else {
              this.showToast('图片上传失败');
            }
            this.hideLoading();
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('图片上传失败');
            console.log(err);
          });
      },
      getParams() {
        const params = {
          pic: this.pic,
          mianji: this.mianji,
          tags: this.status.value,
          title: this.huxing.value
        };
        return params;
      }
    },

    onShow() {
      const {$path} = this.$app;
      if ($path) {
        const {path} = $path;
        this.oldUrls = [];
        this.newUrls = [path];
        this.totalUrls = [path];
        this.$app.$path = null;
      }
    },

    onLoad(option) {
      const {type, index} = option;
      if (type === '修改') {
        this.index = index;
        this.type = '修改';
        const {isLayout} = this;
        const data = isLayout[index];
        this.onHandleRenderLayout(data);
      }
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/@media";

  @height: unit(120, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .scroll-header {
              }
              .scroll-body {
                .module {
                  .module-content {
                    .module-header {
                      padding: unit(30, rpx) unit(30, rpx) 0;
                      .module-title {
                        height: unit(32, rpx);
                        line-height: unit(32, rpx);
                        padding-left: unit(20, rpx);
                        border-left: 4px solid @theme2;
                        font-size: @fontSize32;
                        letter-spacing: 0.5px;
                        font-weight: bold;
                        color: @fontColor1;
                      }
                    }
                    .module-body {
                      .module-base {
                        padding-left: unit(30, rpx);
                        .form-row {
                          .form-col {
                            padding-right: unit(20, rpx);
                            border-bottom: 0.5px solid @borderColor1;
                            .form-group {
                              display: flex;
                              font-size: @fontSize32;
                              color: @fontColor1;
                              .form-label {
                                width: 25%;
                                height: @height;
                                display: inline-block;
                                vertical-align: middle;
                                line-height: @height;
                              }
                              .form-input {
                                width: 75%;
                                height: @height;
                                display: inline-block;
                                vertical-align: middle;
                                text-align: right;
                              }
                              .form-next {
                                display: inline-block;
                                vertical-align: middle;
                                padding-left: unit(10, rpx);
                                line-height: @height;
                                color: @iconNext;
                              }
                            }
                            &:last-child {
                              border: none;
                            }
                          }
                        }
                      }
                      .module-images {
                        .module-row {
                          padding: unit(15, rpx);
                          .module-col {
                            padding: unit(15, rpx);
                            .module-item {
                              width: 100%;
                              position: relative;
                              height: unit(200, rpx);
                              .btn-delete {
                                position: absolute;
                                top: 0;
                                right: 0;
                                z-index: 10;
                                width: unit(50, rpx);
                                height: unit(50, rpx);
                                line-height: unit(50, rpx);
                                background-color: rgba(0, 0, 0, .6);
                                font-size: @fontSize36;
                                text-align: center;
                                color: @btnDelete;
                              }
                            }
                            .module-btn {
                              height: unit(200, rpx);
                              line-height: unit(200, rpx);
                              background-color: #F0F0F0;
                              text-align: center;
                              .module-icon {
                                font-size: @fontSize50;
                                color: @fontColor5;
                              }
                            }
                          }
                        }
                      }
                    }
                    .module-footer {
                    }
                  }
                  &:first-child {
                    margin: 0;
                  }
                }
              }
              .scroll-footer {
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }


</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'lazy-image': '../../../components/lazy-image/lazy-image'
  }
  }
</config>
