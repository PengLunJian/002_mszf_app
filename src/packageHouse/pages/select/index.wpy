<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="房源管理"></top-bar>
        <div class="tab-bar">
          <div class="tab-item" v-for="(item,index) in tab.items"
               :class="{'active':index===tab.initIndex}" :key="index"
               @tap="onHandleChange(index)">
            <div class="tab-text">{{item.name}}</div>
          </div>
        </div>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view
            class="scroll-view"
            scroll-y="{{isScroll}}"
            @scrolltolower="onHandleScrollToLower">
            <div class="scroll-row row">
              <div class="scroll-col col-6" v-for="(item,index) in isData.rows">
                <house-item :item="item" :key="index"/>
              </div>
            </div>
            <loading-more :length="isData.rows.length" :totalCount="isData.totalCount"/>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn-insert iconfont icon-insert"
             @tap="onHandleInsertHouse"></div>
      </div>
      <modal :isEnter="isEnter"
             :isLeave="isLeave"
             title="确认删除该房源吗?"
             context="删除此房源同时删除所有信息"
             @onConfirm="onHandleConfirm"/>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store/index';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../../router/index';
  import Toast from '../../../mixins/toast';
  import Loading from '../../../mixins/loading';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      timer: null,
      pageSize: 10,
      pageIndex: 1,
      isEnter: false,
      isLeave: false,
      isScroll: true,
      tab: {
        initIndex: 0,
        items: [
          {
            name: '新房',
            icon: 'icon-new',
            path: $routes.HOUSE.INSERT.NEW_HOUSE.path
          },
          {
            name: '二手房',
            icon: 'icon-house',
            path: $routes.HOUSE.INSERT.SECOND_HOUSE.path
          },
          {
            name: '租房',
            icon: 'icon-rent',
            path: $routes.HOUSE.INSERT.RENT_HOUSE.path
          }
        ]
      }
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      exeAjaxSelectHouse() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxSelectHouse(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.pageIndex++;
            } else {
              this.showToast('加载失败，请重试');
            }
            this.timer = null;
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.timer = null;
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      },
      exeAjaxDeleteHouse() {
        this.showLoading('正在加载');
        this.ajaxDeleteHouse(this.params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.showToast('房源删除成功');
            } else {
              this.showToast('删除失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('删除失败，请重试');
            console.log(err);
          });
      },
      onHandleChange(index) {
        this.tab.initIndex = index;
        this.resetSelectHouse();
        this.pageIndex = 1;
        this.exeAjaxSelectHouse();
      },
      onHandleScrollToLower() {
        if (this.timer) return;
        this.timer = setTimeout(() => {
          const {rows, totalCount} = this.isData;
          if (rows.length < totalCount) {
            this.exeAjaxSelectHouse();
          }
        }, 500);
      },
      onHandleInsertHouse() {
        const {items, initIndex} = this.tab;
        const url = items[initIndex].path;
        wx.navigateTo({
          url
        });
      },
      onHandleDeleteHouse(params) {
        this.params = params;
        this.isEnter = true;
        this.isLeave = false;
        this.isScroll = false;
      },
      onHandleConfirm() {
        this.exeAjaxDeleteHouse();
      },
      getParams() {
        const type = this.tab.initIndex + 1;
        const params = {
          page: {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex
          },
          filter: [
            {
              field: 'type',
              opt: '=',
              value: type
            }
          ],
          sort: [
            {
              field: 'id',
              asc: false
            }
          ],
          only_my: true
        };
        return params;
      }
    },

    onLoad() {
      this.resetSelectHouse();
      this.exeAjaxSelectHouse();
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/iconfont";

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
        .tab-bar {
          width: 100%;
          display: flex;
          flex-wrap: wrap;
          position: fixed;
          top: unit(130, rpx);
          left: 0;
          z-index: 999;
          background-color: @white;
          box-shadow: 0 0 15px @boxShadow05;
          font-size: @fontSize28;
          text-align: center;
          color: @fontColor2;
          .tab-item {
            width: 33.333%;
            position: relative;
            padding: unit(20, rpx) 0;
            .tab-text {
              height: unit(40, rpx);
              line-height: unit(40, rpx);
              transition: all 300ms ease;
              border-right: 0.5px solid @borderColor1;
            }
            &:after {
              content: '';
              width: 0px;
              display: block;
              position: absolute;
              left: 50%;
              bottom: 0;
              opacity: 0;
              visibility: hidden;
              transform: translateX(-50%);
              transition: all 300ms ease;
              border-top: unit(6, rpx) solid @theme2;
            }
            &.active {
              color: @theme2;
              &:after {
                opacity: 1;
                visibility: visible;
                width: unit(120, rpx);
              }
            }
            &:last-child {
              .tab-text {
                border: none;
              }
            }
          }
        }
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: unit(210, rpx);
          .scroll-view {
            height: 100%;
            .scroll-row {
              padding: unit(15, rpx);
              .scroll-col {
                padding: unit(15, rpx);
              }
            }
          }
        }
      }
      .footer {
        .btn-insert {
          position: fixed;
          right: unit(40, rpx);
          bottom: unit(120, rpx);
          z-index: 1000;
          width: unit(120, rpx);
          height: unit(120, rpx);
          line-height: unit(120, rpx);
          border-radius: @borderRadius100;
          box-shadow: 0 0 15px @boxShadow05;
          background-color: @white;
          font-size: @fontSize48;
          text-align: center;
          color: @theme2;
        }
      }
    }
  }

  /* iPhone X, iPhone XS */
  @media only screen and (device-width: 375px)and (max-device-height: 812px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone XR */
  @media only screen and (device-width: 414px)and (max-device-height: 896px) and (-webkit-device-pixel-ratio: 2) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone XS Max */
  @media only screen and (device-width: 414px)and (max-device-height: 896px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone 6/7/8 Plus */
  @media only screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 65px !important;
    }

    .context {
      padding-top: 105px !important;
    }
  }

</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'loading-more': '../../../components/loading-more/loading-more',
  'house-item': '../../../components/house-item/house-item',
  'modal':'../../../components/modal/modal'
  }
  }
</config>
