<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="基本信息"></top-bar>
        <div class="tab-bar row">
          <div class="tab-item col-4{{tab.activeIndex===index?' active':''}}"
               v-for="(item,index) in tab.items" :key="index"
               @tap="onHandleTabChange(index)">
            <div class="tab-label">{{item}}</div>
          </div>
        </div>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="scroll-header"></div>
              <div class="scroll-body">
                <div class="tab-content" v-if="tab.activeIndex===0">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">状态</label>
                                <input class="form-input" v-model="status.value"
                                       disabled="{{true}}" type="text" placeholder="在售"
                                       @tap="onHandleShowStatus"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">小区名</label>
                                <input class="form-input" v-model="xiaoqu" type="text"
                                       placeholder="金峰万象"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-picker">
                                <picker mode="region" @change="onHandleDiZhiChange" value="{{dizhi.items}}">
                                  <div class="form-group">
                                    <label class="form-label">地址</label>
                                    <input class="form-input" v-model="dizhi.value" disabled="{{true}}" type="text"
                                           placeholder="安徽省、宣城市、广德县"/>
                                    <span class="form-next iconfont icon-next"></span>
                                  </div>
                                </picker>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">详细地址</label>
                                <input class="form-input" v-model="xiangxidizhi" type="text"
                                       placeholder="街道、小区、门牌号"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">联系人</label>
                                <input class="form-input" v-model="owner" type="text" placeholder="房源联系人姓名"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">电话</label>
                                <input class="form-input" v-model="phone" type="number"
                                       placeholder="房源联系人电话"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">单价</label>
                                <input class="form-input" v-model="price" type="number"
                                       placeholder="元/m²"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">建面</label>
                                <input class="form-input" v-model="mianji" type="text"
                                       placeholder="90-150m²"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">户型</label>
                                <input class="form-input" v-model="huxing" type="text"
                                       placeholder="1/2/3室"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">类型</label>
                                <input class="form-input" v-model="leixing.value" disabled="{{true}}" type="text"
                                       placeholder="小区"
                                       @tap="onHandleShowLeiXing"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <picker mode="date" fields="day" value="{{kaipan}}"
                                      @change="onHandleShowKaiPan">
                                <div class="form-group">
                                  <label class="form-label">开盘</label>
                                  <input class="form-input" v-model="kaipan" disabled="{{true}}" type="text"
                                         placeholder="2019年01月01日"/>
                                  <span class="form-next iconfont icon-next"></span>
                                </div>
                              </picker>
                            </div>
                            <div class="form-col col-12">
                              <picker mode="date" fields="day" value="{{jiaofang}}"
                                      @change="onHandleShowJiaoFang">
                                <div class="form-group">
                                  <label class="form-label">交房</label>
                                  <input class="form-input" v-model="jiaofang" disabled="{{true}}" type="text"
                                         placeholder="2019年01月01日"/>
                                  <span class="form-next iconfont icon-next"></span>
                                </div>
                              </picker>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">房源简介</div>
                      </div>
                      <div class="module-body">
                        <div class="module-edit">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <textarea class="textarea" v-model="title" type="text"
                                          placeholder="万象小区 南向两居室 精装修 拎包入住"
                                          @input="onHandleCheckEmpty"/>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="tab-content" v-if="tab.activeIndex===1">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">置业顾问</div>
                      </div>
                      <div class="module-body">
                        <div class="module-agents">
                          <div class="module-row row">
                            <div class="module-col col-12"
                                 v-for="(item,index) in agents.items"
                                 :key="index" @tap="onHandleAgentSelector(index)">
                              <div class="module-item row" :class="{'checked':item.checked}">
                                <div class="item-img">
                                  <lazy-image :src="item.photo||defaultAgent" loadStyle="border-radius:100%;"/>
                                </div>
                                <div class="item-info">
                                  <div class="item-name">{{item.name||noData}}</div>
                                  <div class="item-phone">{{item.tel||noData}}</div>
                                </div>
                                <div class="item-check iconfont icon-right"></div>
                              </div>
                            </div>
                            <div class="module-col col-4" v-if="!isAgent">
                              <div class="module-btn btn btn-agent" @tap="onHandleInsertAgent">
                                <div class="module-icon iconfont icon-insert"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">房源特色</div>
                      </div>
                      <div class="module-body">
                        <div class="module-tags">
                          <div class="module-row row">
                            <div class="module-col col-3"
                                 v-for="(item,index) in tags.items"
                                 :key="index" @tap="onHandleTagSelector(index)">
                              <div class="item-tag" :class="{'checked':item.checked}">{{item.label}}</div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer">
                        <div class="information">建议：为保证前台用户体验请尽量选择3个房源特色</div>
                      </div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">主力户型</div>
                      </div>
                      <div class="module-body">
                        <div class="module-layouts">
                          <div class="module-row row">
                            <div class="module-col col-4"
                                 v-for="(item,index) in layouts" :key="index">
                              <div class="module-item">
                                <div class="item-img">
                                  <lazy-image :src="item.pic"/>
                                </div>
                                <div class="item-info">
                                  <div class="item-row row">
                                    <div class="item-title">{{item.title}}</div>
                                    <div class="item-size">{{item.mianji}}m²</div>
                                  </div>
                                  <div class="item-row row">
                                    <div class="item-state state1" v-if="item.tags==='在售'">{{item.tags}}</div>
                                    <div class="item-state state2" v-if="item.tags==='待售'">{{item.tags}}</div>
                                    <div class="item-state state3" v-if="item.tags==='售罄'">{{item.tags}}</div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div class="module-col col-4">
                              <div class="module-btn btn btn-layout" @tap="onHandleInsertLayout">
                                <div class="module-icon iconfont icon-insert"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="tab-content" v-if="tab.activeIndex===2">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">图片上传</div>
                      </div>
                      <div class="module-body">
                        <div class="module-images">
                          <div class="module-row row">
                            <div class="module-col col-4" v-for="(item,index) in items" :key="index">
                              <div class="module-item" @tap="onHandleShowImage(index)">
                                <div class="btn-delete iconfont icon-delete"
                                     @tap.stop="onHandleDeleteImage(index)"></div>
                                <lazy-image src="{{item}}" mode="aspectFill"/>
                              </div>
                            </div>
                            <div class="module-col col-4">
                              <div class="module-btn btn btn-image" @tap="onHandleInsertImage">
                                <div class="module-icon iconfont icon-insert"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="scroll-footer"></div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert{{isDisable?'':' disable'}}"
             @tap="onHandleInsertHouse">添加房源
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import apis from '../../../../apis/index';
  import store from '../../../../store/index';
  import {mapState, mapActions} from '@wepy/redux';
  import Toast from '../../../../mixins/toast';
  import Loading from '../../../../mixins/loading';
  import * as $routes from '../../../../router';
  import * as $config from '../../../../config';
  import * as utils from '../../../../utils';
  import * as controller from './controller';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      noData: '暂无数据',
      defaultAgent: $config.DEFAULT_AGENT,
      tab: {
        activeIndex: 0,
        items: ['基本信息', '房源配置', '图片上传']
      },
      isDisable: false,
      xiaoqu: '',
      phone: '',
      price: '',
      title: '',
      owner: '',
      mianji: '',
      kaipan: '',
      huxing: '',
      jiaofang: '',
      xiangxidizhi: '',
      status: {
        value: '',
        items: ['在售', '待售', '售罄'],
        index: 0
      },
      dizhi: {
        value: '',
        items: ['安徽省', '宣城市', '广德县']
      },
      leixing: {
        value: '',
        items: [
          '小区',
          '别墅',
          '住宅',
          '商铺'
        ]
      },
      agents: {
        value: [],
        items: []
      },
      tags: {
        value: '',
        items: [
          {
            label: '大阳台',
            checked: false
          },
          {
            label: '大户型',
            checked: false
          },
          {
            label: '低容积',
            checked: false
          },
          {
            label: '南北通透',
            checked: false
          },
          {
            label: '三房朝南',
            checked: false
          },
          {
            label: '厨卫全明',
            checked: false
          },
          {
            label: '主卧套房',
            checked: false
          },
          {
            label: '全景飘窗',
            checked: false
          },
          {
            label: '交通便利',
            checked: false
          },
          {
            label: '人气楼盘',
            checked: false
          },
          {
            label: '今年交房',
            checked: false
          },
          {
            label: '装修交付',
            checked: false
          },
          {
            label: '全景看房',
            checked: false
          }
        ]
      },
      layouts: [],
      items: [],
      pic_url: [],
      image: {
        count: 0,
        baseUrl: apis.baseUrl
      }
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleTabChange(index) {
        this.tab.activeIndex = index;
      },
      onHandleCheckEmpty() {
        let isBaseEmpty =
          (
            this.xiaoqu &&
            this.phone &&
            this.price &&
            this.title &&
            this.owner &&
            this.mianji &&
            this.kaipan &&
            this.huxing &&
            this.status &&
            this.jiaofang &&
            this.dizhi.value &&
            this.xiangxidizhi &&
            this.leixing.value
          );
        let isTagsEmpty = this.tags.value;
        let isAgentEmpty = this.agents.value.length;
        this.isDisable = isBaseEmpty && isAgentEmpty && isTagsEmpty;
        return {
          isBaseEmpty,
          isAgentEmpty,
          isTagsEmpty
        };
      },
      onHandleDiZhiChange(e) {
        const items = e.$wx.detail.value;
        this.dizhi.items = items;
        this.dizhi.value = items.join('、');
        this.onHandleCheckEmpty();
      },
      onHandleShowLeiXing() {
        wx.showActionSheet({
          itemList: this.leixing.items,
          success: (res) => {
            const value = this.leixing.items[res.tapIndex];
            this.leixing.value = value;
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleShowStatus() {
        const {items} = this.status;
        wx.showActionSheet({
          itemList: items,
          success: (res) => {
            const index = res.tapIndex;
            this.status.index = index;
            this.status.value = items[index];
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleShowKaiPan(e) {
        const value = e.$wx.detail.value;
        this.kaipan = utils.dateFormat(value, 'zh-cn');
        this.onHandleCheckEmpty();
      },
      onHandleShowJiaoFang(e) {
        const value = e.$wx.detail.value;
        this.jiaofang = utils.dateFormat(value, 'zh-cn');
        this.onHandleCheckEmpty();
      },
      onHandleAgentSelector(index) {
        let arr = [];
        if (this.agents.items[index].checked) {
          this.agents.items[index].checked = false;
        } else {
          this.agents.items[index].checked = true;
        }

        this.agents.items.map((item) => {
          if (item.checked) {
            const temp = Object.assign({}, item);
            delete temp.checked;
            arr.push(temp);
          }
        });
        this.agents.value = arr;
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleTagSelector(index) {
        let arr = [];
        if (this.tags.items[index].checked) {
          this.tags.items[index].checked = false;
        } else {
          this.tags.items[index].checked = true;
        }

        this.tags.items.map((item) => {
          if (item.checked) {
            arr.push(item.label);
          }
        });

        this.tags.value = arr.join(' ');
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleInsertLayout() {
        wx.navigateTo({
          url: $routes.INSERT_LAYOUT.path
        });
      },
      onHandleInsertHouse() {
        const isCheckEmpty = this.onHandleCheckEmpty();
        const {isBaseEmpty, isAgentEmpty, isTagsEmpty} = isCheckEmpty;
        if (!isBaseEmpty) {
          this.showToast('基本信息填写不完整');
        } else if (!isAgentEmpty) {
          this.showToast('请至少选择一个经纪人');
        } else if (!isTagsEmpty) {
          this.showToast('请选择房源特色');
        } else {
          this.onHandleSubmitHouse();
        }
      },
      onHandleSubmitHouse() {
        this.showLoading();
        if (this.items.length) {
          this.exeAjaxInsertImage();
        } else {
          this.exeAjaxInsertHouse();
        }
      },
      onHandleInsertImage() {
        wx.navigateTo({
          url: $routes.UPLOAD.path
        });
      },
      onHandleShowImage(index) {
        wx.previewImage({
          current: this.items[index],
          urls: this.items
        });
      },
      onHandleDeleteImage(index) {
        this.items.splice(index, 1);
      },
      onHandleInsertAgent() {
        wx.navigateTo({
          url: $routes.INSERT_AGENT.path
        });
      },
      onHandleRenderHouse(data) {
        const {
          id, owner, phone, title, price,
          huxing, mianji, leixing, xiaoqu, status,
          addr, addr_sheng, addr_shi, addr_qu, agency,
          tags, pic_url, kaipan, jiaofang, zhulihuxing
        } = data;
        this.id = id;
        this.xiaoqu = xiaoqu;
        this.phone = phone;
        this.price = price;
        this.title = title;
        this.owner = owner;
        this.mianji = mianji;
        this.huxing = huxing;
        this.kaipan = kaipan;
        this.jiaofang = jiaofang;
        this.xiangxidizhi = addr;
        this.layouts = zhulihuxing;
        this.status.value = this.status.items[status - 1];
        this.dizhi.items = [addr_sheng, addr_shi, addr_qu];
        this.dizhi.value = this.dizhi.items.join('、');
        this.leixing.value = leixing;
        this.tags.value = tags.join(' ');
        this.tags.items.map((item) => {
          if (tags.indexOf(item.label) !== -1) {
            item.checked = true;
          }
        });
        this.agents.value = agency || [];
        this.agents.items = (this.isAgent || []).map((item) => {
          return {
            ...item,
            checked: false
          };
        });
        this.agents.value.map((j) => {
          this.agents.items.map((k) => {
            if (j.id === k.id) {
              k.checked = true;
            }
          });
        });
        this.oldUrls = pic_url;
        this.totalUrls = pic_url.concat(this.newUrls);
        this.onHandleCheckEmpty();
      },
      onHandleRenderAgent() {
        const items = (this.isAgent || []).map((item) => {
          return {
            ...item,
            checked: false
          };
        });
        this.agents.items = items || [];
      },
      exeAjaxUpdateHouse() {
        const params = this.getParams();
        this.ajaxInsertHouse(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.showToast('房源新增成功');
              setTimeout(() => {
                wx.navigateBack({
                  delta: 1
                });
              }, 1000);
            } else {
              this.showToast('新增失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('新增失败，请重试');
            console.log(err);
          });
      },
      exeAjaxInsertImage() {
        let {count, baseUrl} = this.image;
        const filePath = this.items[count];
        const params = {count, filePath};
        this.ajaxInsertImage(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              this.pic_url.push(baseUrl + data);
            }
            this.image.count++;
            if (this.image.count === this.items.length) {
              this.exeAjaxInsertHouse();
            } else {
              this.exeAjaxInsertImage();
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('第' + count + '张图片上传失败');
            this.image.count++;
            if (this.image.count === this.items.length) {
              this.exeAjaxInsertHouse();
            } else {
              this.exeAjaxInsertImage();
            }
            console.log(err);
          });
      },
      getParams() {
        const params = {
          type: 1,
          owner: this.owner,
          phone: this.phone,
          title: this.title,
          price: this.price,
          mianji: this.mianji,
          xiaoqu: this.xiaoqu,
          huxing: this.huxing,
          kaipan: this.kaipan,
          jiaofang: this.jiaofang,
          zhulihuxing: this.layouts,
          leixing: this.leixing.value,
          status: this.status.index + 1,
          addr_sheng: this.dizhi.items[0],
          addr_shi: this.dizhi.items[1],
          addr_qu: this.dizhi.items[2],
          addr: this.xiangxidizhi,
          agency_phone: '18130278679',
          agency_com_name: '广进房产',
          tags: this.tags.value,
          agency: this.agents.value,
          pic_url: this.pic_url
        };
        return params;
      }
    },

    onShow() {
      const {$path, $layout} = this.$app;
      if ($path) {
        const {path} = $path;
        this.items.push(path);
        this.$app.$path = null;
      }
      if ($layout) {
        const {layout} = $layout;
        this.layouts.push(layout);
        this.$app.$layout = null;
      }
    },

    onLoad(option) {
      const {item} = option;
      const data = JSON.parse(item);
      this.onHandleRenderHouse(data);
    }
  });
</script>

<style scoped lang="less">
  @import "../../../../assets/less/variable";
  @import "../../../../assets/less/@media";

  @height: unit(120, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
        .tab-bar {
          position: fixed;
          top: 65px;
          left: 0;
          width: 100%;
          z-index: 999;
          background-color: @white;
          box-shadow: 0 0 15px @boxShadow05;
          .tab-item {
            position: relative;
            height: unit(80, rpx);
            line-height: unit(80, rpx);
            font-size: @fontSize28;
            letter-spacing: 0.5px;
            text-align: center;
            color: @fontColor1;
            &:after {
              content: '';
              width: 0;
              display: block;
              position: absolute;
              left: 50%;
              bottom: 0;
              opacity: 0;
              visibility: hidden;
              transition: all 300ms ease;
              transform: translateX(-50%);
              border-top: unit(6, rpx) solid @theme2;
            }
            &.active {
              color: @theme2;
              &:after {
                opacity: 1;
                visibility: visible;
                width: unit(120, rpx);
              }
            }
          }
        }
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 105px;
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .scroll-header {
              }
              .scroll-body {
                .tab-content {
                  .module {
                    .module-content {
                      .module-header {
                        padding: unit(30, rpx) unit(30, rpx) 0;
                        .module-title {
                          height: unit(32, rpx);
                          line-height: unit(32, rpx);
                          padding-left: unit(20, rpx);
                          border-left: 4px solid @theme2;
                          font-size: @fontSize32;
                          letter-spacing: 0.5px;
                          font-weight: bold;
                          color: @fontColor1;
                        }
                      }
                      .module-body {
                        .module-base {
                          padding-left: unit(30, rpx);
                          .form-row {
                            .form-col {
                              padding-right: unit(20, rpx);
                              border-bottom: 0.5px solid @borderColor1;
                              .form-group {
                                display: flex;
                                font-size: @fontSize32;
                                color: @fontColor1;
                                .form-label {
                                  width: 25%;
                                  height: @height;
                                  display: inline-block;
                                  vertical-align: middle;
                                  line-height: @height;
                                }
                                .form-input {
                                  width: 75%;
                                  height: @height;
                                  display: inline-block;
                                  vertical-align: middle;
                                  text-align: right;
                                }
                                .form-next {
                                  display: inline-block;
                                  vertical-align: middle;
                                  padding-left: unit(10, rpx);
                                  line-height: @height;
                                  color: @iconNext;
                                }
                              }
                              &:last-child {
                                border: none;
                              }
                            }
                          }
                        }
                        .module-edit {
                          .form-row {
                            padding: unit(15, rpx);
                            .form-col {
                              padding: unit(15, rpx);
                              .form-group {
                                padding: unit(20, rpx);
                                border: 0.5px solid @borderColor2;
                                border-radius: @borderRadius10;
                                background-color: @bgEdit;
                                font-size: @fontSize32;
                                color: @fontColor1;
                                .textarea {
                                  width: 100%;
                                  height: unit(260, rpx);
                                  text-align: justify;
                                }
                              }
                              &:last-child {
                                border: none;
                              }
                            }
                          }
                        }
                        .module-agents {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                position: relative;
                                .item-img {
                                  overflow: hidden;
                                  width: unit(80, rpx);
                                  height: unit(80, rpx);
                                  border-radius: @borderRadius100;
                                }
                                .item-info {
                                  padding: 0 unit(30, rpx);
                                  font-size: @fontSize28;
                                  color: @fontColor3;
                                  .item-name {
                                    height: unit(40, rpx);
                                    line-height: unit(40, rpx);
                                  }
                                  .item-phone {
                                    height: unit(40, rpx);
                                    line-height: unit(40, rpx);
                                  }
                                }
                                .item-check {
                                  position: absolute;
                                  top: 50%;
                                  z-index: 1;
                                  right: unit(10, rpx);
                                  width: unit(44, rpx);
                                  height: unit(44, rpx);
                                  line-height: unit(44, rpx);
                                  margin-top: unit(-22, rpx);
                                  transition: all 150ms ease;
                                  border-radius: @borderRadius100;
                                  background-color: @unCheck;
                                  font-size: @fontSize20;
                                  color: @borderColor1;
                                  text-align: center;
                                }
                                &.checked {
                                  .item-check {
                                    background: -webkit-linear-gradient(left, @theme1, @theme2);
                                    color: @white;
                                  }
                                }
                              }
                            }
                            .module-btn {
                              height: unit(200, rpx);
                              line-height: unit(200, rpx);
                              background-color: #F0F0F0;
                              text-align: center;
                              .module-icon {
                                font-size: @fontSize50;
                                color: @fontColor5;
                              }
                            }
                          }
                        }
                        .module-tags {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              text-align: center;
                              .item-tag {
                                height: unit(60, rpx);
                                line-height: unit(60, rpx);
                                border-radius: unit(60, rpx);
                                background: @unCheck;
                                font-size: @fontSize24;
                                color: @fontColor3;
                                &.checked {
                                  background: -webkit-linear-gradient(left, @theme1, @theme2);
                                  color: @white;
                                }
                              }
                            }
                          }
                        }
                        .module-layouts {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                position: relative;
                                .item-img {
                                  width: 100%;
                                  height: unit(200, rpx);
                                }
                                .item-info {
                                  font-size: @fontSize26;
                                  color: @fontColor1;
                                  text-align: left;
                                  .item-title {
                                    height: unit(50, rpx);
                                    line-height: unit(50, rpx);
                                  }
                                  .item-size {
                                    height: unit(50, rpx);
                                    line-height: unit(50, rpx);
                                    margin-left: unit(10, rpx);
                                  }
                                  .item-state {
                                    height: unit(40, rpx);
                                    line-height: unit(40, rpx);
                                    padding: 0 unit(10, rpx);
                                    font-size: @fontSize24;
                                    color: @white;
                                    &.state1 {
                                      background-color: @stateColor1;
                                    }
                                    &.state2 {
                                      background-color: @stateColor2;
                                    }
                                    &.state3 {
                                      background-color: @stateColor3;
                                    }
                                  }
                                }
                              }
                              .module-btn {
                                height: unit(200, rpx);
                                line-height: unit(200, rpx);
                                background-color: #F0F0F0;
                                text-align: center;
                                .module-icon {
                                  font-size: @fontSize50;
                                  color: @fontColor5;
                                }
                              }
                            }
                          }
                        }
                        .module-images {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                width: 100%;
                                position: relative;
                                height: unit(200, rpx);
                                .btn-delete {
                                  position: absolute;
                                  top: 0;
                                  right: 0;
                                  z-index: 10;
                                  width: unit(50, rpx);
                                  height: unit(50, rpx);
                                  line-height: unit(50, rpx);
                                  background-color: rgba(0, 0, 0, .6);
                                  font-size: @fontSize36;
                                  text-align: center;
                                  color: @btnDelete;
                                }
                              }
                              .module-btn {
                                height: unit(200, rpx);
                                line-height: unit(200, rpx);
                                background-color: #F0F0F0;
                                text-align: center;
                                .module-icon {
                                  font-size: @fontSize50;
                                  color: @fontColor5;
                                }
                              }
                            }
                          }
                        }
                      }
                      .module-footer {
                        .information {
                          padding: 0 unit(30, rpx) unit(30, rpx);
                          line-height: unit(40, rpx);
                          font-size: @fontSize26;
                          color: @fontColor3;
                        }
                      }
                    }
                    &:first-child {
                      margin: 0;
                    }
                  }
                }
              }
              .scroll-footer {
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }


</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../../components/top-bar/top-bar',
  'lazy-image': '../../../../components/lazy-image/lazy-image'
  }
  }
</config>
