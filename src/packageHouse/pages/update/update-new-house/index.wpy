<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="房源修改"></top-bar>
        <div class="tab-bar">
          <scroll-view class="scroll-view" scroll-x="{{true}}">
            <div class="tab-item{{tab.activeIndex===index?' active':''}}"
                 v-for="(item,index) in tab.items" :key="index"
                 @tap="onHandleTabChange(index)">
              <div class="tab-label">{{item}}</div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{true}}">
            <div class="scroll-content">
              <div class="scroll-header"></div>
              <div class="scroll-body">
                <div class="tab-content{{tab.activeIndex===0?' active':''}}">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">状态</label>
                                <input class="form-input" v-model="state.value"
                                       disabled="{{true}}" type="text" placeholder="在售"
                                       @tap="onHandleSelectState"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">小区名</label>
                                <input class="form-input" v-model="houseName" type="text"
                                       placeholder="金峰万象"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-picker">
                                <picker mode="region" @change="onHandleSelectAddress" value="{{address.items}}">
                                  <div class="form-group">
                                    <label class="form-label">地址</label>
                                    <input class="form-input" v-model="address.value" disabled="{{true}}" type="text"
                                           placeholder="安徽省、宣城市、广德县"/>
                                    <span class="form-next iconfont icon-next"></span>
                                  </div>
                                </picker>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">详细地址</label>
                                <input class="form-input" v-model="detailAddress" type="text"
                                       placeholder="街道、小区、门牌号"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">联系人</label>
                                <input class="form-input" v-model="contact" type="text" placeholder="房源联系人姓名"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">电话</label>
                                <input class="form-input" v-model="phone" type="number"
                                       placeholder="房源联系人电话"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">单价</label>
                                <input class="form-input" v-model="price" type="number"
                                       placeholder="元/m²"
                                       @input="onHandleCheckEmpty"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <picker mode="multiSelector" @change="onHandleSelectBuildArea"
                                      value="{{buildArea.index}}" range="{{buildArea.items}}">
                                <div class="form-group">
                                  <label class="form-label">建面</label>
                                  <input class="form-input" v-model="buildArea.value" disabled="{{true}}" type="text"
                                         placeholder="90-150m²"
                                         @input="onHandleCheckEmpty"/>
                                  <span class="form-next iconfont icon-next"></span>
                                </div>
                              </picker>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-body">
                        <div class="module-base">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">户型</label>
                                <input class="form-input" v-model="aparts.value" disabled="{{true}}" type="text"
                                       placeholder="2/3/4室"
                                       @tap="onHandleShowAparts"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <div class="form-group">
                                <label class="form-label">类型</label>
                                <input class="form-input" v-model="quality.value" disabled="{{true}}" type="text"
                                       placeholder="小区"
                                       @tap="onHandleSelectQuality"/>
                                <span class="form-next iconfont icon-next"></span>
                              </div>
                            </div>
                            <div class="form-col col-12">
                              <picker mode="date" fields="day" value="{{openTime}}"
                                      @change="onHandleSelectOpenTime">
                                <div class="form-group">
                                  <label class="form-label">开盘</label>
                                  <input class="form-input" v-model="openTime" disabled="{{true}}" type="text"
                                         placeholder="2019年01月01日"/>
                                  <span class="form-next iconfont icon-next"></span>
                                </div>
                              </picker>
                            </div>
                            <div class="form-col col-12">
                              <picker mode="date" fields="day" value="{{handTime}}"
                                      @change="onHandleSelectHandTime">
                                <div class="form-group">
                                  <label class="form-label">交房</label>
                                  <input class="form-input" v-model="handTime" disabled="{{true}}" type="text"
                                         placeholder="2019年01月01日"/>
                                  <span class="form-next iconfont icon-next"></span>
                                </div>
                              </picker>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">房源简介</div>
                      </div>
                      <div class="module-body">
                        <div class="module-edit">
                          <div class="form-row row">
                            <div class="form-col col-12">
                              <div class="form-group">
                                <textarea class="textarea" v-model="title" type="text"
                                          placeholder="万象小区 南向两居室 精装修 拎包入住"
                                          @input="onHandleCheckEmpty"/>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="tab-content{{tab.activeIndex===1?' active':''}}">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">置业顾问</div>
                      </div>
                      <div class="module-body">
                        <div class="module-agents">
                          <div class="module-row row">
                            <div class="module-col col-6"
                                 v-for="(item,index) in agents.items"
                                 :key="index" @tap="onHandleSelectAgents(index)">
                              <div class="module-item" :class="{'checked':item.checked}">
                                <agent-item :item="item" :key="index" isBtns="{{false}}"/>
                                <div class="item-check iconfont icon-right"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="tab-content{{tab.activeIndex===2?' active':''}}">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">房源特色</div>
                      </div>
                      <div class="module-body">
                        <div class="module-tags">
                          <div class="module-row row">
                            <div class="module-col col-3"
                                 v-for="(item,index) in tags.items"
                                 :key="index" @tap="onHandleSelectTags(index)">
                              <div class="item-tag" :class="{'checked':item.checked}">{{item.label}}</div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer">
                        <div class="information">建议：为保证前台用户体验请尽量选择3个房源特色</div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="tab-content{{tab.activeIndex===3?' active':''}}">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">主力户型</div>
                      </div>
                      <div class="module-body">
                        <div class="module-layouts">
                          <div class="module-row row">
                            <div class="module-col col-4"
                                 v-for="(item,index) in isLayout" :key="index">
                              <div class="module-item" @tap="onHandleUpdateLayout(item,index)">
                                <div class="item-img">
                                  <lazy-image src="{{item.picUrl?fileUrl+item.picUrl:''}}" mode="aspectFill"/>
                                </div>
                                <div class="item-info">
                                  <div class="item-row row">
                                    <div class="item-title">{{item.apart}}</div>
                                    <div class="item-size">{{item.mainArea}}m²</div>
                                  </div>
                                  <div class="item-row row">
                                    <div class="item-state state1" v-if="item.state==='在售'">{{item.state}}</div>
                                    <div class="item-state state2" v-if="item.state==='待售'">{{item.state}}</div>
                                    <div class="item-state state3" v-if="item.state==='售罄'">{{item.state}}</div>
                                  </div>
                                </div>
                                <div class="btn-delete iconfont icon-delete"
                                     @tap.stop="onHandleDeleteLayout(index)"></div>
                              </div>
                            </div>
                            <div class="module-col col-4">
                              <div class="module-btn btn btn-layout" @tap="onHandleInsertLayout">
                                <div class="module-icon iconfont icon-insert"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="tab-content{{tab.activeIndex===4?' active':''}}">
                  <div class="module">
                    <div class="module-content">
                      <div class="module-header">
                        <div class="module-title">图片上传</div>
                      </div>
                      <div class="module-body">
                        <div class="module-images">
                          <div class="module-row row">
                            <div class="module-col col-4" v-for="(item,index) in urls" :key="index">
                              <div class="module-item" @tap="onHandleShowImage(index)">
                                <div class="btn-delete iconfont icon-delete"
                                     @tap.stop="onHandleDeleteImage(index)"></div>
                                <lazy-image src="{{fileUrl+item}}" mode="aspectFill"/>
                              </div>
                            </div>
                            <div class="module-col col-4">
                              <div class="module-btn btn btn-image" @tap="onHandleUploadImage">
                                <div class="module-icon iconfont icon-insert"></div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="module-footer"></div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="scroll-footer"></div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn btn-insert{{isDisable?'':' disable'}}"
             @tap="onHandleUpdateHouse">保存
        </div>
      </div>
      <div class="modal{{isShow?'':' hide'}}">
        <div class="modal-mask" @tap="onHandleHideAparts"></div>
        <div class="modal-content">
          <div class="modal-header">
            <div class="btn-close iconfont icon-close" @tap="onHandleHideAparts"></div>
          </div>
          <div class="modal-body">
            <div class="modal-aparts">
              <div class="modal-row row">
                <div class="modal-col col-3" v-for="(item,index) in aparts.items"
                     :key="index" @tap="onHandleSelectAparts(index)">
                  <div class="modal-item" :class="{'checked':item.checked}">{{item.label}}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer"></div>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../../store';
  import {mapState, mapActions} from '@wepy/redux';
  import Toast from '../../../../mixins/toast';
  import Loading from '../../../../mixins/loading';
  import * as $routes from '../../../../router';
  import * as utils from '../../../../utils';
  import * as controller from './controller';
  import apis from '../../../../apis';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      noData: '暂无数据',
      fileUrl: apis.fileUrl,
      tab: {
        activeIndex: 0,
        items: [
          '基本信息',
          '置业顾问',
          '房源特色',
          '主力户型',
          '图片上传'
        ]
      },
      isDisable: false,
      isShow: false,
      id: -1,
      phone: '',
      price: '',
      title: '',
      contact: '',
      handTime: '',
      houseName: '',
      openTime: '',
      minfloorArea: 0,
      maxfloorArea: 0,
      detailAddress: '',
      state: {
        value: '',
        items: ['在售', '待售', '售罄']
      },
      aparts: {
        value: '',
        items: [
          {
            label: '一室',
            checked: false
          },
          {
            label: '二室',
            checked: false
          },
          {
            label: '三室',
            checked: false
          },
          {
            label: '四室',
            checked: false
          },
          {
            label: '五室',
            checked: false
          },
          {
            label: '六室',
            checked: false
          },
          {
            label: '七室',
            checked: false
          },
          {
            label: '八室',
            checked: false
          },
          {
            label: '九室',
            checked: false
          },
          {
            label: '十室',
            checked: false
          }
        ]
      },
      address: {
        value: '',
        items: ['安徽省', '宣城市', '广德县']
      },
      quality: {
        value: '',
        items: [
          '小区',
          '别墅',
          '住宅',
          '商铺'
        ]
      },
      buildArea: {
        value: '',
        items: [
          utils.buildArea(),
          utils.buildArea()
        ],
        index: [1, 1]
      },
      agents: {
        value: [],
        items: []
      },
      tags: {
        value: '',
        items: [
          {
            label: '大阳台',
            checked: false
          },
          {
            label: '大户型',
            checked: false
          },
          {
            label: '低容积',
            checked: false
          },
          {
            label: '南北通透',
            checked: false
          },
          {
            label: '三房朝南',
            checked: false
          },
          {
            label: '厨卫全明',
            checked: false
          },
          {
            label: '主卧套房',
            checked: false
          },
          {
            label: '全景飘窗',
            checked: false
          },
          {
            label: '交通便利',
            checked: false
          },
          {
            label: '人气楼盘',
            checked: false
          },
          {
            label: '今年交房',
            checked: false
          },
          {
            label: '装修交付',
            checked: false
          },
          {
            label: '全景看房',
            checked: false
          }
        ]
      },
      urls: []
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleTabChange(index) {
        this.tab.activeIndex = index;
      },
      onHandleCheckEmpty() {
        let isBaseEmpty =
          (
            this.phone &&
            this.price &&
            this.title &&
            this.contact &&
            this.handTime &&
            this.openTime &&
            this.houseName &&
            this.state.value &&
            this.minfloorArea &&
            this.maxfloorArea &&
            this.aparts.value &&
            this.detailAddress &&
            this.address.value &&
            this.quality.value
          );
        let isTagsEmpty = this.tags.value;
        let isAgentEmpty = this.agents.value.length;
        this.isDisable = isBaseEmpty && isAgentEmpty && isTagsEmpty;
        return {
          isBaseEmpty,
          isAgentEmpty,
          isTagsEmpty
        };
      },
      onHandleSelectAddress(e) {
        const items = e.$wx.detail.value;
        this.address.items = items;
        this.address.value = items.join('、');
        this.onHandleCheckEmpty();
      },
      onHandleSelectQuality() {
        wx.showActionSheet({
          itemList: this.quality.items,
          success: (res) => {
            const value = this.quality.items[res.tapIndex];
            this.quality.value = value;
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleSelectState() {
        const {items} = this.state;
        wx.showActionSheet({
          itemList: items,
          success: (res) => {
            const index = res.tapIndex;
            this.state.value = items[index];
            this.onHandleCheckEmpty();
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleSelectOpenTime(e) {
        const value = e.$wx.detail.value;
        this.openTime = utils.dateFormat(value, 'zh-cn');
        this.onHandleCheckEmpty();
      },
      onHandleSelectHandTime(e) {
        const value = e.$wx.detail.value;
        this.handTime = utils.dateFormat(value, 'zh-cn');
        this.onHandleCheckEmpty();
      },
      onHandleSelectAgents(index) {
        let arr = [];
        if (this.agents.items[index].checked) {
          this.agents.items[index].checked = false;
        } else {
          this.agents.items[index].checked = true;
        }

        this.agents.items.map((item) => {
          if (item.checked) {
            const temp = Object.assign({}, item);
            delete temp.checked;
            arr.push(temp);
          }
        });
        this.agents.value = arr;
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleSelectTags(index) {
        let arr = [];
        if (this.tags.items[index].checked) {
          this.tags.items[index].checked = false;
        } else {
          this.tags.items[index].checked = true;
        }

        this.tags.items.map((item) => {
          if (item.checked) {
            arr.push(item.label);
          }
        });

        this.tags.value = arr.join(' ');
        this.onHandleCheckEmpty();
        arr = null;
      },
      onHandleInsertLayout() {
        wx.navigateTo({
          url: $routes.HOUSE.LAYOUT.path
        });
      },
      onHandleDeleteLayout(index) {
        this.deleteLayoutReplace(index);
      },
      onHandleUpdateLayout(item, index) {
        const query = '?&type=修改&index=' + index;
        wx.navigateTo({
          url: $routes.HOUSE.LAYOUT.path + query
        });
      },
      onHandleSelectBuildArea(e) {
        const index = e.$wx.detail.value;
        const items = this.buildArea.items;
        this.buildArea.value = items[0][index[0]] + '-' + items[1][index[1]];
        this.minfloorArea = items[0][index[0]];
        this.maxfloorArea = items[1][index[1]];
        this.onHandleCheckEmpty();
      },
      onHandleUpdateHouse() {
        const isCheckEmpty = this.onHandleCheckEmpty();
        const {isBaseEmpty, isAgentEmpty, isTagsEmpty} = isCheckEmpty;
        if (!isBaseEmpty) {
          this.showToast('基本信息填写不完整');
        } else if (!isAgentEmpty) {
          this.showToast('请至少选择一个经纪人');
        } else if (!isTagsEmpty) {
          this.showToast('请选择房源特色');
        } else {
          this.exeAjaxUpdateHouse();
        }
      },
      onHandleUploadImage() {
        wx.navigateTo({
          url: $routes.HOUSE.UPLOAD.path
        });
      },
      onHandleShowImage(index) {
        const urls = this.urls.map((item) => {
          return this.fileUrl + item;
        });
        wx.previewImage({
          current: urls[index],
          urls: urls
        });
      },
      onHandleDeleteImage(index) {
        this.urls.splice(index, 1);
      },
      onHandleInsertAgent() {
        wx.navigateTo({
          url: $routes.AGENT.INSERT.path
        });
      },
      onHandleRenderHouse(data) {
        const {
          id, contact, phone, title, price,
          apart, minfloorArea, maxfloorArea, quality, houseName,
          state, address, province, city, area, agent,
          tags, picUrl, openTime, handTime, mainApart
        } = data;
        this.id = id;
        this.phone = phone;
        this.price = price;
        this.title = title;
        this.contact = contact;
        this.state.value = state;
        this.handTime = handTime;
        this.aparts.value = apart;
        this.houseName = houseName;
        this.openTime = openTime;
        this.detailAddress = address;
        this.minfloorArea = minfloorArea;
        this.maxfloorArea = maxfloorArea;
        this.address.items = [province, city, area];
        this.address.value = this.address.items.join('、');
        this.buildArea.value = minfloorArea + '-' + maxfloorArea;
        this.quality.value = quality;
        this.tags.value = tags.join(' ');
        this.tags.items.map((item) => {
          if (tags.indexOf(item.label) !== -1) {
            item.checked = true;
          }
        });
        this.agents.items = (this.isAgent || []).map((item) => {
          let checked = false;
          for (let i in agent || []) {
            if (agent[i].id === item.id) {
              checked = true;
            }
          }
          if (checked) {
            this.agents.value.push(item);
          }
          return {
            ...item,
            checked
          };
        });
        this.urls = picUrl;
        this.selectLayoutReplace(mainApart);
        this.onHandleCheckEmpty();
      },
      onHandleRenderAgent() {
        const items = (this.isAgent || []).map((item) => {
          return {
            ...item,
            checked: false
          };
        });
        this.agents.items = items || [];
      },
      exeAjaxUpdateHouse() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxUpdateHouse(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.showToast('房源修改成功');
              setTimeout(() => {
                wx.navigateBack({
                  delta: 1
                });
              }, 1000);
            } else {
              this.showToast('修改失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('修改失败，请重试');
            console.log(err);
          });
      },
      getParams() {
        const {busId} = this.isLogin;
        const params = {
          busId,
          type: 1,
          id: this.id,
          phone: this.phone,
          title: this.title,
          price: this.price,
          contact: this.contact,
          state: this.state.value,
          handTime: this.handTime,
          apart: this.aparts.value,
          mainApart: this.isLayout,
          openTime: this.openTime,
          houseName: this.houseName,
          quality: this.quality.value,
          address: this.detailAddress,
          minfloorArea: this.minfloorArea,
          maxfloorArea: this.maxfloorArea,
          province: this.address.items[0],
          city: this.address.items[1],
          area: this.address.items[2],
          agent: this.agents.value,
          tags: this.tags.value,
          picUrl: this.urls
        };
        return params;
      }
    },

    onShow() {
      const {isImage} = this;
      if (isImage) {
        this.urls.push(isImage);
        this.removeImageReplace();
      }
    },

    onLoad(option) {
      const {item} = option;
      const data = JSON.parse(item);
      this.onHandleRenderHouse(data);
    }
  });
</script>

<style scoped lang="less">
  @import "../../../../assets/less/variable";
  @import "../../../../assets/less/@media";

  @height: unit(120, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
        .tab-bar {
          position: fixed;
          top: 65px;
          left: 0;
          width: 100%;
          z-index: 999;
          background-color: @white;
          box-shadow: 0 0 15px @boxShadow05;
          .scroll-view {
            white-space: nowrap;
          }
          .tab-item {
            width: 25%;
            position: relative;
            display: inline-block;
            height: unit(80, rpx);
            line-height: unit(80, rpx);
            font-size: @fontSize28;
            letter-spacing: 0.5px;
            text-align: center;
            color: @fontColor1;
            &:after {
              content: '';
              width: 0;
              display: block;
              position: absolute;
              left: 50%;
              bottom: 0;
              opacity: 0;
              visibility: hidden;
              transition: all 300ms ease;
              transform: translateX(-50%);
              border-top: unit(6, rpx) solid @theme2;
            }
            &.active {
              color: @theme2;
              &:after {
                opacity: 1;
                visibility: visible;
                width: unit(120, rpx);
              }
            }
          }
        }
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 105px;
          padding-bottom: unit(160, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding: unit(20, rpx) 0;
              .scroll-header {
              }
              .scroll-body {
                .tab-content {
                  display: none !important;
                  &.active {
                    display: block !important;
                  }
                  .module {
                    .module-content {
                      .module-header {
                        position: relative;
                        padding: unit(30, rpx) unit(30, rpx) 0;
                        .module-title {
                          height: unit(30, rpx);
                          line-height: unit(30, rpx);
                          padding-left: unit(20, rpx);
                          border-left: 4px solid @theme2;
                          font-size: @fontSize32;
                          letter-spacing: 0.5px;
                          font-weight: bold;
                          color: @fontColor1;
                        }
                      }
                      .module-body {
                        .module-base {
                          padding-left: unit(30, rpx);
                          .form-row {
                            .form-col {
                              padding-right: unit(20, rpx);
                              border-bottom: 0.5px solid @borderColor1;
                              .form-group {
                                display: flex;
                                font-size: @fontSize32;
                                color: @fontColor1;
                                .form-label {
                                  width: 25%;
                                  height: @height;
                                  display: inline-block;
                                  vertical-align: middle;
                                  line-height: @height;
                                }
                                .form-input {
                                  width: 75%;
                                  height: @height;
                                  display: inline-block;
                                  vertical-align: middle;
                                  text-align: right;
                                }
                                .form-next {
                                  display: inline-block;
                                  vertical-align: middle;
                                  padding-left: unit(10, rpx);
                                  line-height: @height;
                                  color: @iconNext;
                                }
                              }
                              &:last-child {
                                border: none;
                              }
                            }
                          }
                        }
                        .module-edit {
                          .form-row {
                            padding: unit(15, rpx);
                            .form-col {
                              padding: unit(15, rpx);
                              .form-group {
                                padding: unit(20, rpx);
                                border: 0.5px solid @borderColor2;
                                border-radius: @borderRadius10;
                                background-color: @bgEdit;
                                font-size: @fontSize32;
                                color: @fontColor1;
                                .textarea {
                                  width: 100%;
                                  height: unit(260, rpx);
                                  text-align: justify;
                                }
                              }
                              &:last-child {
                                border: none;
                              }
                            }
                          }
                        }
                        .module-agents {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                overflow: hidden;
                                position: relative;
                                border-radius: @borderRadius20;
                                box-shadow: 0 0 15px @boxShadow05;
                                .item-check {
                                  position: absolute;
                                  top: unit(20, rpx);
                                  left: unit(20, rpx);
                                  z-index: 1;
                                  width: unit(44, rpx);
                                  height: unit(44, rpx);
                                  line-height: unit(44, rpx);
                                  transition: all 150ms ease;
                                  border-radius: @borderRadius100;
                                  background-color: @unCheck;
                                  font-size: @fontSize20;
                                  color: @borderColor1;
                                  text-align: center;
                                }
                                &.checked {
                                  .item-check {
                                    background: -webkit-linear-gradient(left, @theme1, @theme2);
                                    color: @white;
                                  }
                                }
                              }
                            }
                          }
                        }
                        .module-tags {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              text-align: center;
                              .item-tag {
                                height: unit(60, rpx);
                                line-height: unit(60, rpx);
                                border-radius: unit(60, rpx);
                                background: @unCheck;
                                font-size: @fontSize24;
                                color: @fontColor3;
                                &.checked {
                                  background: -webkit-linear-gradient(left, @theme1, @theme2);
                                  color: @white;
                                }
                              }
                            }
                          }
                        }
                        .module-layouts {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                position: relative;
                                .item-img {
                                  width: 100%;
                                  height: unit(200, rpx);
                                }
                                .item-info {
                                  font-size: @fontSize26;
                                  color: @fontColor1;
                                  text-align: left;
                                  .item-title {
                                    height: unit(50, rpx);
                                    line-height: unit(50, rpx);
                                  }
                                  .item-size {
                                    height: unit(50, rpx);
                                    line-height: unit(50, rpx);
                                    margin-left: unit(10, rpx);
                                  }
                                  .item-state {
                                    height: unit(40, rpx);
                                    line-height: unit(40, rpx);
                                    padding: 0 unit(10, rpx);
                                    font-size: @fontSize24;
                                    color: @white;
                                    &.state1 {
                                      background-color: @stateColor1;
                                    }
                                    &.state2 {
                                      background-color: @stateColor2;
                                    }
                                    &.state3 {
                                      background-color: @stateColor3;
                                    }
                                  }
                                }
                                .btn-delete {
                                  position: absolute;
                                  top: 0;
                                  right: 0;
                                  z-index: 10;
                                  width: unit(50, rpx);
                                  height: unit(50, rpx);
                                  line-height: unit(50, rpx);
                                  background-color: rgba(0, 0, 0, .6);
                                  font-size: @fontSize36;
                                  text-align: center;
                                  color: @btnDelete;
                                }
                              }
                              .module-btn {
                                height: unit(200, rpx);
                                line-height: unit(200, rpx);
                                background-color: #F0F0F0;
                                text-align: center;
                                .module-icon {
                                  font-size: @fontSize50;
                                  color: @fontColor5;
                                }
                              }
                            }
                          }
                        }
                        .module-images {
                          .module-row {
                            padding: unit(15, rpx);
                            .module-col {
                              padding: unit(15, rpx);
                              .module-item {
                                width: 100%;
                                position: relative;
                                height: unit(200, rpx);
                                .btn-delete {
                                  position: absolute;
                                  top: 0;
                                  right: 0;
                                  z-index: 10;
                                  width: unit(50, rpx);
                                  height: unit(50, rpx);
                                  line-height: unit(50, rpx);
                                  background-color: rgba(0, 0, 0, .6);
                                  font-size: @fontSize36;
                                  text-align: center;
                                  color: @btnDelete;
                                }
                              }
                              .module-btn {
                                height: unit(200, rpx);
                                line-height: unit(200, rpx);
                                background-color: #F0F0F0;
                                text-align: center;
                                .module-icon {
                                  font-size: @fontSize50;
                                  color: @fontColor5;
                                }
                              }
                            }
                          }
                        }
                      }
                      .module-footer {
                        .information {
                          padding: 0 unit(30, rpx) unit(30, rpx);
                          line-height: unit(40, rpx);
                          font-size: @fontSize26;
                          color: @fontColor3;
                        }
                      }
                    }
                    &:first-child {
                      margin: 0;
                    }
                  }
                }
              }
              .scroll-footer {
              }
            }
          }
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        padding: unit(30, rpx);
        background-color: @white;
        box-shadow: 0 0 15px @boxShadow05;
        .btn-insert {
          overflow: hidden;
          height: unit(100, rpx);
          line-height: unit(100, rpx);
          border-radius: @borderRadius10;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          letter-spacing: 1px;
          text-align: center;
          color: @white;
          &.disable {
            background: @disable;
            color: @fontColor3;
          }
        }
      }
    }
  }
</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../../components/top-bar/top-bar',
  'agent-item': '../../../../components/agent-item/agent-item',
  'lazy-image': '../../../../components/lazy-image/lazy-image'
  }
  }
</config>
