<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="密码重置"/>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{isScroll}}">
            <div class="scroll-content">
              <div class="module">
                <div class="module-content">
                  <div class="module-header"></div>
                  <div class="module-body">
                    <div class="module-row row">
                      <div class="module-col col-12">
                        <label class="form-label">原密码</label>
                        <input class="form-input" v-model="oldPassword" type="password"
                               placeholder="请输入原密码"/>
                      </div>
                    </div>
                    <div class="module-row row">
                      <div class="module-col col-12">
                        <label class="form-label">新密码</label>
                        <input class="form-input" v-model="newPassword" type="password"
                               placeholder="请输入新密码"/>
                      </div>
                    </div>
                    <div class="module-row row">
                      <div class="module-col col-12">
                        <label class="form-label">确认新密码</label>
                        <input class="form-input" v-model="againPassword" type="password"
                               placeholder="请确认新密码"/>
                      </div>
                    </div>
                  </div>
                  <div class="module-footer">
                    <div class="btn btn-update" @tap="onHandleUpdatePassword">保存</div>
                  </div>
                </div>
              </div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store';
  import Toast from '../../../mixins/toast';
  import Route from '../../../mixins/route';
  import Loading from '../../../mixins/loading';
  import Storage from '../../../mixins/storage';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../../router';

  wepy.page({
    store,

    mixins: [Toast, Loading, Route, Storage],

    data: {
      isScroll: true,
      oldPassword: '',
      newPassword: '',
      againPassword: ''
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleCheckEmpty() {
        let result = false;
        const {oldPassword, newPassword, againPassword, isLogin} = this;
        const {passWord} = isLogin || {};
        if (!oldPassword) {
          this.showToast('请输入原密码');
        } else if (!newPassword) {
          this.showToast('请输入新密码');
        } else if (newPassword.length < 6) {
          this.showToast('密码长度不能小于6位');
        } else if (newPassword === oldPassword) {
          this.showToast('新密码不能与原密码相同');
        } else if (!againPassword) {
          this.showToast('请确认新密码');
        } else if (oldPassword !== passWord) {
          this.showToast('原密码输入错误');
        } else if (newPassword !== againPassword) {
          this.showToast('新密码两次输入不一致');
        } else {
          result = true;
        }
        return result;
      },
      onHandleUpdatePassword() {
        if (this.onHandleCheckEmpty()) {
          this.exeAjaxUpdatePassword();
        }
      },
      exeAjaxUpdatePassword() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxUpdatePassword(params)
          .then((res) => {
            res = res || {};
            this.hideLoading();
            const {success} = res.payload;
            if (success) {
              this.showToast('修改成功，请重新登录。');
              setTimeout(() => {
                this.removeItem('user');
                this.reLaunch($routes.LOGIN.path);
              }, 1000);
            } else {
              this.showToast('修改失败，请重试。');
            }
            console.log(res);
          })
          .catch((err) => {
            console.log(err);
            this.hideLoading();
            this.showToast('修改失败，请重试。');
          });
      },
      getParams() {
        const {isLogin, newPassword} = this;
        const {busId, agentId, type} = isLogin;
        return {
          busId,
          agentId,
          type,
          passWord: newPassword
        };
      }
    },

    onLoad() {
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/@media";
  @import "../../../assets/less/variable";

  @height: unit(110, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .scroll-content {
              .module {
                background-color: @transparent;
                .module-content {
                  .module-header {
                  }
                  .module-body {
                    .module-row {
                      .form-label {
                        display: block;
                        height: unit(70, rpx);
                        line-height: unit(70, rpx);
                        padding: 0 unit(30, rpx);
                        font-size: @fontSize28;
                        font-weight: bold;
                      }
                      .form-input {
                        height: @height;
                        padding: 0 unit(30, rpx);
                        background-color: @white;
                        font-size: @fontSize32;
                      }
                    }
                  }
                  .module-footer {
                    padding: unit(30, rpx);
                    .btn-update {
                      height: @height;
                      line-height: @height;
                      border-radius: @borderRadius15;
                      background: -webkit-linear-gradient(left, @theme1, @theme2);
                      font-size: @fontSize36;
                      letter-spacing: 2px;
                      text-align: center;
                      color: @white;
                    }
                  }
                }
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'modal': '../../../components/modal/modal',
  'top-bar': '../../../components/top-bar/top-bar',
  }
  }
</config>
