<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="房源管理"></top-bar>
        <div class="tab-bar">
          <div class="tab-item" v-for="(item,index) in tab.items"
               :class="{'active':index===tab.initIndex}" :key="index"
               @tap="onHandleChange(index)">
            <div class="tab-text">{{item}}</div>
          </div>
        </div>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view
            class="scroll-view"
            scroll-y="{{isScroll}}"
            @scrolltolower="onHandleScrollToLower">
            <module-house-item :items="isData.rows"/>
            <loading-more :length="isData.rows.length" :totalCount="isData.totalCount"/>
          </scroll-view>
        </div>
      </div>
      <div class="footer">
        <div class="btn-insert iconfont icon-insert" @tap="onHandleShowModal"></div>
      </div>
      <div class="modal" :class="{'hide':isHide}">
        <div class="modal-mask" @tap="onHandleHideModal"></div>
        <div class="modal-content">
          <div class="modal-header">
            <div class="modal-title">新增房源</div>
            <div class="modal-close" @tap="onHandleHideModal">
              <div class="btn-close iconfont icon-close2"></div>
            </div>
          </div>
          <div class="modal-body">
            <div class="modal-row row">
              <div class="modal-col col-4" v-for="(item,index) in items" :key="index">
                <div class="btn-item" @tap="onHandleRouter(item.path)">
                  <div class="btn-icon iconfont {{item.icon}}"></div>
                  <div class="btn-text">{{item.name}}</div>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer"></div>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../router';
  import Toast from '../../mixins/toast';
  import Loading from '../../mixins/loading';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      timer: null,
      isHide: true,
      isScroll: true,
      pageSize: 10,
      pageIndex: 1,
      tab: {
        initIndex: 0,
        items: ['新房', '二手房', '租房']
      },
      items: [
        {
          name: '新房',
          icon: 'icon-new',
          path: $routes.INSERT_NEW_HOUSE.path
        },
        {
          name: '二手房',
          icon: 'icon-house',
          path: $routes.INSERT_SECOND_HOUSE.path
        },
        {
          name: '租房',
          icon: 'icon-rent',
          path: $routes.INSERT_HOUSE.rent.step1.path
        }
      ]
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      exeAjaxSelectHouse() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxSelectHouse(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (success) {
              this.pageIndex++;
            } else {
              this.showToast('加载失败，请重试');
            }
            this.timer = null;
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.timer = null;
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      },
      onHandleChange(index) {
        this.tab.initIndex = index;
        this.clearSelectHouse();
        this.pageIndex = 1;
        this.exeAjaxSelectHouse();
      },
      onHandleScrollToLower() {
        if (this.timer) return;
        this.timer = setTimeout(() => {
          const {rows, totalCount} = this.isData;
          if (rows.length < totalCount) {
            this.exeAjaxSelectHouse();
          }
        }, 500);
      },
      onHandleShowModal() {
        this.isHide = false;
        this.isScroll = false;
      },
      onHandleHideModal() {
        this.isHide = true;
        this.isScroll = true;
      },
      onHandleRouter(url) {
        wx.navigateTo({
          url,
          success: () => {
            this.onHandleHideModal();
          }
        });
      },
      getParams() {
        const type = this.tab.initIndex + 1;
        const params = {
          page: {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex
          },
          filter: [
            {
              field: 'type',
              opt: '=',
              value: type
            }
          ],
          sort: [
            {
              field: 'id',
              asc: false
            }
          ]
        };
        return params;
      }
    },

    onLoad() {
      this.clearSelectHouse();
      this.exeAjaxSelectHouse();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";
  @import "../../assets/less/iconfont";

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
        .tab-bar {
          width: 100%;
          display: flex;
          flex-wrap: wrap;
          position: fixed;
          top: unit(130, rpx);
          left: 0;
          z-index: 999;
          background-color: @white;
          box-shadow: 0 0 15px @boxShadow05;
          font-size: @fontSize28;
          text-align: center;
          color: @fontColor2;
          .tab-item {
            width: 33.333%;
            position: relative;
            padding: unit(20, rpx) 0;
            .tab-text {
              height: unit(40, rpx);
              line-height: unit(40, rpx);
              transition: all 300ms ease;
              border-right: 0.5px solid @borderColor1;
            }
            &:after {
              content: '';
              width: 0px;
              display: block;
              position: absolute;
              left: 50%;
              bottom: 0;
              opacity: 0;
              visibility: hidden;
              transform: translateX(-50%);
              transition: all 300ms ease;
              border-top: unit(6, rpx) solid @theme2;
            }
            &.active {
              color: @theme2;
              &:after {
                opacity: 1;
                visibility: visible;
                width: unit(120, rpx);
              }
            }
            &:last-child {
              .tab-text {
                border: none;
              }
            }
          }
        }
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: unit(210, rpx);
          .scroll-view {
            height: 100%;
          }
        }
      }
      .footer {
        .btn-insert {
          position: fixed;
          right: unit(40, rpx);
          bottom: unit(120, rpx);
          z-index: 1000;
          width: unit(120, rpx);
          height: unit(120, rpx);
          line-height: unit(120, rpx);
          border-radius: @borderRadius100;
          box-shadow: 0 0 15px @boxShadow05;
          background-color: @white;
          font-size: @fontSize48;
          text-align: center;
          color: @theme2;
        }
      }
      .modal {
        .modal-mask {
          position: fixed;
          top: 0;
          left: 0;
          z-index: 1010;
          width: 100%;
          height: 100%;
          background-color: @mask;
          transition: all 300ms ease-out;
        }
        .modal-content {
          position: fixed;
          left: 0;
          bottom: 0;
          z-index: 1011;
          width: 100%;
          height: unit(400, rpx);
          overflow: hidden;
          background-color: @white;
          transition: all 300ms ease-out;
          box-shadow: 0 0 15px @boxShadow15;
          border-top-left-radius: @borderRadius40;
          border-top-right-radius: @borderRadius40;
          .modal-header {
            .modal-close {
              position: absolute;
              top: 0;
              left: 0;
              width: unit(100, rpx);
              height: unit(100, rpx);
              line-height: unit(100, rpx);
              .btn-close {
                font-size: @fontSize36;
                text-align: center;
                color: @fontColor1;
              }
            }
            .modal-title {
              height: unit(100, rpx);
              line-height: unit(100, rpx);
              font-size: @fontSize32;
              letter-spacing: 1px;
              text-align: center;
              font-weight: bold;
              color: @fontColor1;
            }
          }
          .modal-body {
            padding-top: unit(20, rpx);
            .modal-row {
              padding: unit(15, rpx);
            }
            .modal-col {
              padding: unit(15, rpx);
              .btn-item {
                text-align: center;
                .btn-icon {
                  overflow: hidden;
                  width: unit(110, rpx);
                  height: unit(110, rpx);
                  line-height: unit(110, rpx);
                  margin: 0 auto unit(20, rpx);
                  border-radius: @borderRadius100;
                  box-shadow: 0 0 15px @boxShadow05;
                  background: -webkit-linear-gradient(-45deg, @theme1, @theme2);
                  font-size: @fontSize50;
                  color: @white;
                }
                .btn-text {
                  height: unit(40, rpx);
                  line-height: unit(40, rpx);
                  font-size: @fontSize32;
                  color: @fontColor1;
                }
              }
            }
          }
          .modal-footer {
          }
        }
        &.hide {
          .modal-mask {
            opacity: 0;
            visibility: hidden;
          }
          .modal-content {
            visibility: hidden;
            transform: translateY(unit(400, rpx));
          }
        }
      }
    }
  }

  /* iPhone X, iPhone XS */
  @media only screen and (device-width: 375px)and (max-device-height: 812px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone XR */
  @media only screen and (device-width: 414px)and (max-device-height: 896px) and (-webkit-device-pixel-ratio: 2) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone XS Max */
  @media only screen and (device-width: 414px)and (max-device-height: 896px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 89px !important;
    }

    .context {
      padding-top: 129px !important;
    }
  }

  /* iPhone 6/7/8 Plus */
  @media only screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) {
    .tab-bar {
      top: 65px !important;
    }

    .context {
      padding-top: 105px !important;
    }
  }

</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../components/top-bar/top-bar',
  'loading-more': '../../components/loading-more/loading-more',
  'module-house-item': '../../components/module-house-item/module-house-item'
  }
  }
</config>
