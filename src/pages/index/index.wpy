<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="码上找房" :isIcon="false"></top-bar>
      </div>
      <div class="body">
        <div class="context fade" v-if="isSuccess">
          <scroll-view
            class="scroll-view"
            scroll-y="{{true}}">
            <div class="scroll-inner">
              <information :isData="isCount"></information>
              <navigation></navigation>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import Toast from '../../mixins/toast';
  import Loading from '../../mixins/loading';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {},

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      exeAjaxSelectBusiness() {
        const {busId} = this.isLogin;
        const params = {id: busId};
        this.ajaxSelectBusiness(params)
          .then((res) => {
            res = res || {};
            const {success} = res.payload;
            if (!success) {
              this.showToast('加载失败，请重试');
            }
          })
          .catch((err) => {
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      },
      exeAjaxSelectCount() {
        this.showLoading();
        const {busId} = this.isLogin;
        const params = {id: busId};
        this.ajaxSelectCount(params)
          .then((res) => {
            this.hideLoading();
            res = res || {};
            const {success} = res.payload;
            if (!success) {
              this.showToast('加载失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      },
      exeAjaxSelectAgent() {
        const {busId} = this.isLogin;
        const params = {id: busId};
        this.ajaxSelectAgent(params)
          .then((res) => {
            res = res || {};
            const {success} = res.payload;
            if (!success) {
              this.showToast('加载失败，请重试');
            }
          })
          .catch((err) => {
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      }
    },

    onLoad() {
      this.exeAjaxSelectBusiness();
      this.exeAjaxSelectCount();
      this.exeAjaxSelectAgent();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";
  @import "../../assets/less/@media";

  @height: unit(64, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .scroll-inner {
              padding-top: unit(20, rpx);
              .module {
                margin: 0;
                .module-content {
                  .module-header {
                    padding: unit(30, rpx) unit(30, rpx) 0;
                    .module-title {
                      height: unit(32, rpx);
                      line-height: unit(32, rpx);
                      padding-left: unit(20, rpx);
                      border-left: 4px solid @theme2;
                      font-size: @fontSize32;
                      letter-spacing: 0.5px;
                      font-weight: bold;
                      color: @fontColor1;
                    }
                  }
                  .module-body {
                    .module-echarts {
                      padding: unit(30, rpx);
                      .ec-canvas {
                        width: 100%;
                        height: unit(400, rpx);
                      }
                    }
                  }
                  .module-footer {

                  }
                }
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }

</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../components/top-bar/top-bar',
  'information': '../../components/information/information',
  'navigation': '../../components/navigation/navigation'
  }
  }
</config>
