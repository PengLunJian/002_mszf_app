<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="码上找房" :isIcon="false"/>
      </div>
      <div class="body">
        <div class="context fade">
          <scroll-view class="scroll-view" scroll-y="{{isScroll}}">
            <div class="module-row row">
              <div class="module-col col-12">
                <count :isCount="isCount"/>
              </div>
              <div class="module-col col-12">
                <navigation :items="house" title="房源管理"/>
              </div>
              <div class="module-col col-12">
                <navigation :items="business" title="店铺管理"/>
              </div>
              <div class="module-col col-12">
                <navigation :items="system" title="系统管理"/>
              </div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
      <modal :isEnter="isEnter"
             :isLeave="isLeave"
             :title="title"
             confirmText="立即更新"
             cancelText="下次再说"
             context="系统更新可体验更多功能"
             @onConfirm="onHandleConfirm"/>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import Toast from '../../mixins/toast';
  import Loading from '../../mixins/loading';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../router';

  wepy.page({
    store,

    mixins: [Toast, Loading],

    data: {
      isEnter: false,
      isLeave: false,
      isScroll: true,
      title: '',
      hasUpdate: false,
      updateManager: null,
      house: [
        {
          name: '新房',
          icon: 'icon-new',
          color: '#00bbff',
          path: $routes.HOUSE.SELECT.path + '?type=1'
        },
        {
          name: '二手房',
          color: '#00dc96',
          icon: 'icon-second',
          path: $routes.HOUSE.SELECT.path + '?type=2'
        },
        {
          name: '租房',
          color: '#ffb600',
          icon: 'icon-rent',
          path: $routes.HOUSE.SELECT.path + '?type=3'
        }
      ],
      business: [
        {
          name: '用户',
          color: '#ffd417',
          icon: 'icon-user',
          path: $routes.CUSTOMER.SELECT.path
        },
        {
          name: '店铺',
          color: '#ff9888',
          icon: 'icon-business',
          path: $routes.BUSINESS.SELECT.path
        },
        {
          name: '经纪人',
          color: '#aaaaff',
          icon: 'icon-agent',
          path: $routes.AGENT.SELECT.path
        }
      ],
      system: [
        {
          name: '修改密码',
          color: '#00ccff',
          icon: 'icon-system',
          path: $routes.WAITTING.path
        },
        {
          name: '版本更新',
          color: '#00d96c',
          icon: 'icon-version',
          hasUpdate: false
        }
      ]
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleVersion() {
        const updateManager = wx.getUpdateManager();
        this.updateManager = updateManager;
        updateManager.onCheckForUpdate((res) => {
          res = res || {};
          const {hasUpdate} = res;
          this.hasUpdate = hasUpdate;
          this.system[1].hasUpdate = hasUpdate;
          this.title = hasUpdate ? '系统发现新版本' : '暂无更新版本';
        });
      },
      onHandleConfirm() {
        const {hasUpdate, updateManager} = this;
        if (hasUpdate) {
          updateManager.onUpdateReady(() => {
            updateManager.applyUpdate();
          });
          updateManager.onUpdateFailed(() => {
            this.showToast('请您删除小程序，重新搜索打开');
          });
        } else {
          this.showToast('系统已是最新版本，无需更新。');
        }
      },
      onHandleShowModal() {
        this.isEnter = true;
        this.isLeave = false;
        this.isScroll = false;
      },
      exeAjaxSelectIndex() {
        const {busId} = this.isLogin;
        const params = {busId};
        this.ajaxSelectIndex(params)
          .then((res) => {
            res = res || {};
            const {res1, res2} = res.payload;
            const success = res1.success && res2.success;
            if (!success) {
              this.showToast('加载失败，请重试');
            }
          })
          .catch((err) => {
            this.showToast('加载失败，请重试');
            console.log(err);
          });
      }
    },

    onLoad() {
      this.onHandleVersion();
      this.exeAjaxSelectIndex();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/@media";
  @import "../../assets/less/variable";

  @height: unit(64, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .module-row {
              padding: unit(15, rpx);
              .module-col {
                padding: unit(15, rpx);
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'modal':'../../components/modal/modal',
  'count':'../../components/count/count',
  'top-bar':'../../components/top-bar/top-bar',
  'navigation':'../../components/navigation/navigation'
  }
  }
</config>
