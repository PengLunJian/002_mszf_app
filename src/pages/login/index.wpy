<template>
  <div class="container">
    <div class="content">
      <div class="header"></div>
      <div class="body">
        <div class="context fade">
          <div class="login-container">
            <div class="login-content">
              <div class="login-header">
                <img src="../../assets/images/logo@2x.png" mode="aspectFit"/>
              </div>
              <div class="login-body">
                <div class="form-group">
                  <label class="form-label iconfont icon-username"></label>
                  <input class="form-input" v-model="userName" type="text"
                         placeholder="请输入账号"/>
                </div>
                <div class="form-group">
                  <label class="form-label iconfont icon-password"></label>
                  <input class="form-input" v-model="passWord" type="text" :password="true"
                         placeholder="请输入密码"/>
                </div>
                <div class="form-group">
                  <div class="form-row row">
                    <div class="form-col col-6">
                      <div class="form-checkbox" @tap="onHandleCheckbox">
                        <com-checkbox :checked="checked"/>
                        <label class="form-checkbox-text">记住账户</label>
                      </div>
                    </div>
                    <div class="form-col col-6">
                      <label class="form-forget" @tap="onHandleForgetPassword">忘记密码</label>
                    </div>
                  </div>
                </div>
                <div class="form-group">
                  <div class="btn btn-login" @tap="onHandleSelectLogin">登录</div>
                </div>
              </div>
              <div class="login-footer">
                <div class="description">提示：码上找房管理系统是服务于商户的管理平台，商户需使用平台内部分配账号登录后方可实现数据管理。</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="footer">
        <div class="version">Version{{version}}</div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import Toast from '../../mixins/toast';
  import Route from '../../mixins/route';
  import Loading from '../../mixins/loading';
  import {mapState, mapActions} from '@wepy/redux';
  import * as $storage from '../../utils/storage';
  import * as controller from './controller';
  import * as $routes from '../../router';

  wepy.page({
    store,

    mixins: [Route, Toast, Loading],

    data: {
      version: '',
      userName: '',
      passWord: '',
      checked: false
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleCheckEmpty() {
        let result = false;
        const {userName, passWord} = this;
        if (!userName) {
          this.showToast('请输入账号');
        } else if (!passWord) {
          this.showToast('请输入密码');
        } else {
          result = true;
        }
        return result;
      },
      onHandleRenderUser() {
        const user = $storage.getItem('user');
        const {userName, passWord} = user || {};
        if (userName && passWord) {
          this.userName = userName;
          this.passWord = passWord;
          this.checked = true;
        }
      },
      onHandleCheckbox() {
        this.checked = !this.checked;
      },
      onHandleForgetPassword() {
        this.navigateTo($routes.WAITTING.path);
      },
      onHandleSelectLogin() {
        if (this.onHandleCheckEmpty()) {
          this.exeAjaxSelectLogin();
        }
      },
      exeAjaxSelectLogin() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxSelectLogin(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              const {checked} = this;
              if (checked) {
                $storage.setItem('user', data);
              } else {
                $storage.removeItem('user', data);
              }
              this.redirectTo($routes.INDEX.path);
            } else {
              this.hideLoading();
              this.showToast('用户名或密码错误');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('服务器连接失败');
            console.log(err);
          });
      },
      getParams() {
        const {userName, passWord} = this;
        const params = {
          userName,
          passWord
        };
        return params;
      }
    },

    onLoad() {
      const {globalData} = this.$app.$options;
      const {version} = globalData;
      this.version = version;
      this.onHandleRenderUser();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";

  @height: unit(100, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          .login-container {
            height: 100%;
            padding: 0 unit(45, rpx);
            background-color: @theme2;
            font-size: 0;
            .login-content {
              width: 100%;
              overflow: hidden;
              display: inline-block;
              vertical-align: middle;
              border-radius: @borderRadius40;
              background-color: @white;
              font-size: @fontSize32;
              color: @fontColor1;
              .login-header {
                position: relative;
                border-bottom: 0.5px dashed @theme2;
                image {
                  margin: 0 auto;
                  width: unit(200, rpx);
                  height: unit(160, rpx);
                }
                &:before,
                &:after {
                  content: '';
                  display: block;
                  position: absolute;
                  bottom: unit(-15, rpx);
                  z-index: 1;
                  width: unit(30, rpx);
                  height: unit(30, rpx);
                  background-color: @theme2;
                  border-radius: @borderRadius100;
                }
                &:before {
                  left: unit(-15, rpx);
                }
                &:after {
                  right: unit(-15, rpx);
                }
              }
              .login-body {
                padding: unit(70, rpx) unit(50, rpx);
                .form-group {
                  position: relative;
                  margin-bottom: unit(50, rpx);
                  .form-label {
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: @height;
                    height: @height;
                    line-height: @height;
                    font-size: @fontSize46;
                    text-align: center;
                  }
                  .form-input {
                    height: @height;
                    padding-left: @height;
                    border-radius: @height;
                    background-color: @bgColor;
                  }
                  .form-forget {
                    float: right;
                    height: unit(44, rpx);
                    line-height: unit(44, rpx);
                    text-decoration: underline;
                  }
                  .form-checkbox {
                    display: flex;
                    .form-checkbox-text {
                      height: unit(44, rpx);
                      line-height: unit(44, rpx);
                      padding-left: unit(10, rpx);
                    }
                  }
                  .btn-login {
                    height: @height;
                    overflow: hidden;
                    line-height: @height;
                    border-radius: @height;
                    background: -webkit-linear-gradient(left, @theme1, @theme2);
                    font-size: @fontSize40;
                    letter-spacing: 2px;
                    text-align: center;
                    color: @white;
                  }
                  &:last-child {
                    margin: 0;
                  }
                }
              }
              .login-footer {
                padding-bottom: unit(60, rpx);
                .description {
                  padding: 0 unit(60, rpx);
                  line-height: unit(36, rpx);
                  font-size: @fontSize24;
                  text-align: justify;
                  color: @fontColor3;
                }
              }
            }
            &:before {
              content: '';
              height: 100%;
              display: inline-block;
              vertical-align: middle;
            }
          }
        }
      }
      .footer {
        .version {
          position: fixed;
          left: 0;
          bottom: 0;
          z-index: 1000;
          width: 100%;
          height: unit(80, rpx);
          line-height: unit(80, rpx);
          font-size: @fontSize28;
          text-align: center;
          font-weight: bold;
          color: @white;
        }
      }
    }
  }
</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'com-checkbox': '../../components/com-checkbox/com-checkbox'
  }
  }
</config>
