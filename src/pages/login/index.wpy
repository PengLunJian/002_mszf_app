<template>
  <div class="container">
    <div class="content">
      <div class="header"></div>
      <div class="body">
        <div class="context fade">
          <div class="module">
            <div class="module-content">
              <div class="module-header">
                <image class="image" src="../../assets/images/logo-white@2x.png" mode="aspectFit"/>
              </div>
              <div class="module-body">
                <div class="form-group">
                  <label class="form-label iconfont icon-username"></label>
                  <input class="form-input" v-model="userName" type="text"
                         placeholder="请输入账号"/>
                </div>
                <div class="form-group">
                  <label class="form-label iconfont icon-password"></label>
                  <input class="form-input" v-model="passWord" type="text" :password="true"
                         placeholder="请输入密码"/>
                </div>
                <div class="form-group">
                  <div class="form-row row">
                    <div class="form-col col-6">
                      <span class="form-text" @tap="onHandleRoutePassword">忘记密码</span>
                    </div>
                    <div class="form-col col-6">
                      <span class="form-text pull-right" @tap="onHandleRegister">用户注册</span>
                    </div>
                  </div>
                </div>
                <div class="form-group">
                  <div class="btn btn-login" @tap="onHandleSelectLogin">登录</div>
                </div>
                <div class="form-group">
                  <div class="form-desc">提示：码上找房商户管理系统是服务于商户的管理平台，商户需使用平台内部分配账号登录后方可实现数据管理。</div>
                </div>
              </div>
              <div class="module-footer"></div>
            </div>
          </div>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import Toast from '../../mixins/toast';
  import Route from '../../mixins/route';
  import Loading from '../../mixins/loading';
  import {mapState, mapActions} from '@wepy/redux';
  import * as $storage from '../../utils/storage';
  import * as controller from './controller';
  import * as $routes from '../../router';

  wepy.page({
    store,

    mixins: [Route, Toast, Loading],

    data: {
      userName: '',
      passWord: '',
      checked: false,
      options: {
        value: 0,
        items: [
          '管理员',
          '经纪人'
        ]
      }
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleCheckEmpty() {
        let result = false;
        const {userName, passWord} = this;
        if (!userName) {
          this.showToast('请输入账号');
        } else if (!passWord) {
          this.showToast('请输入密码');
        } else {
          result = true;
        }
        return result;
      },
      onHandleRenderUser() {
        const user = $storage.getItem('user');
        const {userName, passWord} = user || {};
        if (userName && passWord) {
          this.userName = userName;
          this.passWord = passWord;
          this.checked = true;
        }
      },
      onHandleCheckbox() {
        this.checked = !this.checked;
      },
      onHandleSelectOptions() {
        const {items} = this.options;
        wx.showActionSheet({
          itemList: items,
          success: (res) => {
            res = res || {};
            const {tapIndex} = res;
            this.options.value = tapIndex;
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleRoutePassword() {
        this.navigateTo($routes.WAITTING.path);
      },
      onHandleRegister() {
        this.navigateTo($routes.REGISTER.path);
      },
      onHandleSelectLogin() {
        if (this.onHandleCheckEmpty()) {
          this.exeAjaxSelectLogin();
        }
      },
      exeAjaxSelectLogin() {
        this.showLoading();
        const params = this.getParams();
        this.ajaxSelectLogin(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              const {checked} = this;
              if (checked) {
                $storage.setItem('user', data);
              } else {
                $storage.removeItem('user', data);
              }
              this.redirectTo($routes.INDEX.path);
            } else {
              this.hideLoading();
              this.showToast('用户名或密码错误');
            }
            console.log(res);
          })
          .catch((err) => {
            this.hideLoading();
            this.showToast('服务器连接失败');
            console.log(err);
          });
      },
      getParams() {
        const {userName, passWord, options} = this;
        const type = options.value;
        const params = {
          userName,
          passWord,
          type
        };
        return params;
      }
    },

    onLoad() {
      const {globalData} = this.$app.$options;
      const {version} = globalData;
      this.version = version;
      this.onHandleRenderUser();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";

  @height: unit(100, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          .module {
            height: 100%;
            margin: 0;
            .module-content {
              width: 100%;
              font-size: @fontSize32;
              color: @fontColor1;
              .module-header {
                height: unit(400, rpx);
                background-color: @theme2;
                .image {
                  width: unit(250, rpx);
                  height: unit(300, rpx);
                  margin: 0 auto;
                }
              }
              .module-body {
                position: relative;
                top: unit(-100, rpx);
                width: unit(660, rpx);
                margin: 0 auto;
                padding: unit(100, rpx) unit(45, rpx);
                box-shadow: 0 0 15px @boxShadow05;
                border-radius: @borderRadius30;
                background-color: @white;
                .form-group {
                  position: relative;
                  margin-bottom: unit(50, rpx);
                  .form-label {
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: @height;
                    height: @height;
                    line-height: @height;
                    font-size: @fontSize46;
                    text-align: center;
                  }
                  .form-input {
                    height: @height;
                    padding-left: @height;
                    border-radius: @height;
                    background-color: @bgColor;
                  }
                  .form-text {
                    height: unit(44, rpx);
                    line-height: unit(44, rpx);
                    &.checkbox {
                      padding-left: unit(15, rpx);
                    }
                  }
                  .form-desc {
                    line-height: unit(36, rpx);
                    font-size: @fontSize24;
                    text-align: justify;
                    color: @fontColor3;
                  }
                  .btn-login {
                    height: @height;
                    overflow: hidden;
                    line-height: @height;
                    border-radius: @height;
                    background: -webkit-linear-gradient(left, @theme1, @theme2);
                    font-size: @fontSize40;
                    letter-spacing: 2px;
                    text-align: center;
                    color: @white;
                  }
                  &:last-child {
                    margin: 0;
                  }
                }
              }
              .module-footer {
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'lazy-image': '../../components/lazy-image/lazy-image',
  'com-checkbox': '../../components/com-checkbox/com-checkbox'
  }
  }
</config>
