<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="图片处理"></top-bar>
      </div>
      <div class="body">
        <div class="context">
          <canvas
            class="cropper"
            disable-scroll="true"
            style="width: 375px;height: 100%;background-color: rgba(0, 0, 0, 0.8);"
            @touchstart="onHandleTouchStart"
            @touchmove="onHandleTouchMove"
            @touchend="onHandleTouchEnd"
            @error="onHandleCanvasError"
            canvas-id="cropper">
          </canvas>
          <canvas
            class="cropper"
            disable-scroll="true"
            style="position: fixed;top: -1334px;left: -750px;width: 750px;height: 1334px;"
            canvas-id="targetCropper">
          </canvas>
        </div>
      </div>
      <div class="footer">
        <div class="footer-row row">
          <div class="footer-col col-6">
            <div class="btn btn-upload" @tap="onHandleChooseImage">上传图片</div>
          </div>
          <div class="footer-col col-6">
            <div class="btn btn-confirm" @tap="onHandleConfirmImage">生成图片</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import WeCropper from 'we-cropper';

  wepy.page({
    store,

    mixins: [],

    data: {
      $: null
    },

    computed: {},

    methods: {
      onHandleChooseImage() {
        wx.chooseImage({
          count: 1,
          sizeType: ['original'],
          success: (res) => {
            const src = res.tempFilePaths[0];
            this.pushOrigin(src);
            console.log(res);
          },
          fail: (err) => {
            console.log(err);
          }
        });
      },
      onHandleConfirmImage() {
        this.getCropperImage()
          .then((src) => {
            if (src) {
              wx.previewImage({
                current: '', // 当前显示图片的http链接
                urls: [src] // 需要预览的图片http链接列表
              });
            } else {
              console.log('获取图片地址失败，请重试');
            }
          });
      },
      onHandleGetOptions() {
        const device = wx.getSystemInfoSync();
        const width = device.windowWidth;
        const height = device.windowHeight - 50;
        const options = {
          width,
          height,
          scale: 2.5,
          zoom: 8,
          cut: {
            x: (width - 300) / 2,
            y: (height - 300) / 2,
            width: 300,
            height: 300
          },
          id: 'cropper',
          targetId: 'targetCropper'
        };
        return options;
      },
      onHandleTouchStart(e) {
        this.$.touchStart(e);
      },
      onHandleTouchMove(e) {
        this.$.touchMove(e);
      },
      onHandleTouchEnd(e) {
        this.$.touchEnd(e);
      },
      onHandleCanvasError(e) {
        console.error(e.detail.errMsg);
      },
      pushOrigin(src) {
        this.$.pushOrign(src);
      },
      updateCanvas() {
        // this.$.updateCanvas();
      },
      getCropperImage() {
        return this.$.getCropperImage();
      },
      getCropperBase64(fn) {
        // this.$.getCropperImage(fn);
      }
    },

    onLoad() {
      const options = this.onHandleGetOptions();
      this.$ = new WeCropper(options)
        .on('ready', (...args) => {
          this.$emit('ready', ...args);
        })
        .on('beforeImageLoad', (...args) => {
          this.$emit('beforeImageLoad', ...args);
        })
        .on('imageLoad', (...args) => {
          this.$emit('imageLoad', ...args);
        })
        .on('beforeDraw', (...args) => {
          this.$emit('beforeDraw', ...args);
        });
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";
  @import "../../assets/less/@media";

  @btnHeight: unit(90, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          padding-bottom: 105px;
        }
      }
      .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 1000;
        background-color: rgba(0, 0, 0, .8);
        .footer-row {
          padding: unit(30, rpx);
          .footer-col {
            padding: unit(30, rpx);
          }
        }
        .btn {
          margin: 0 auto;
          overflow: hidden;
          height: @btnHeight;
          line-height: @btnHeight;
          border-radius: @btnHeight;
          box-shadow: 0 0 15px @boxShadow05;
          background: -webkit-linear-gradient(left, @theme1, @theme2);
          font-size: @fontSize32;
          text-align: center;
          color: @white;
        }
      }
    }
  }

</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../components/top-bar/top-bar'
  }
  }
</config>
