<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="系统更新"/>
      </div>
      <div class="body">
        <div class="context fade">
          <div class="module">
            <div class="module-content">
              <div class="module-header">
                <div class="module-title">
                  <img src="../../assets/images/logo@2x.png" mode="aspectFit"/>
                </div>
              </div>
              <div class="module-body">
                <div class="module-info">{{context}}</div>
              </div>
              <div class="module-footer">
                <div class="btn btn-update" @tap="onHandleUpdateVersion">立即更新</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import Toast from '../../mixins/toast';

  wepy.page({
    store,

    mixins: [Toast],

    data: {
      context: '',
      hasUpdate: false,
      updateManager: null
    },

    computed: {},

    methods: {
      onHandleVersion() {
        const updateManager = wx.getUpdateManager();
        this.updateManager = updateManager;
        updateManager.onCheckForUpdate((res) => {
          res = res || {};
          const {hasUpdate} = res;
          this.hasUpdate = hasUpdate;
          this.context = hasUpdate ? '系统发现新版本，是否更新?' : '当前已是最新版本，无需更新。';
        });
      },
      onHandleUpdateVersion() {
        const {hasUpdate, updateManager} = this;
        if (hasUpdate) {
          updateManager.onUpdateReady(() => {
            updateManager.applyUpdate();
          });
          updateManager.onUpdateFailed(() => {
            this.showToast('请您删除小程序，重新搜索打开');
          });
        } else {
          this.showToast('当前已是最新版本，无需更新。');
        }
      }
    },

    onLoad() {
      this.onHandleVersion();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/@media";
  @import "../../assets/less/variable";

  @height: unit(64, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      background-color: @white;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .module {
            .module-content {
              padding: unit(100, rpx) 0;
              .module-header {
                .module-title {
                  image {
                    width: auto;
                    height: unit(80, rpx);
                  }
                }
              }
              .module-body {
                margin-top: unit(50, rpx);
                .module-info {
                  font-size: @fontSize32;
                  text-align: center;
                  font-weight: bold;
                  color: @fontColor1;
                }
              }
              .module-footer {
                .btn-update {
                  position: fixed;
                  left: 50%;
                  bottom: unit(200, rpx);
                  margin-left: unit(-160, rpx);
                  overflow: hidden;
                  width: unit(320, rpx);
                  height: unit(100, rpx);
                  line-height: unit(100, rpx);
                  border-radius: unit(100, rpx);
                  background: -webkit-linear-gradient(left, @theme1, @theme2);
                  font-size: @fontSize32;
                  text-align: center;
                  color: @white;
                }
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  disableScroll:true,
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../components/top-bar/top-bar'
  }
  }
</config>
